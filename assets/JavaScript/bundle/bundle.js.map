{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/JavaScript/game_objects/sound.js","webpack:///./assets/JavaScript/game_objects/menu.js","webpack:///./assets/JavaScript/levels/level_four.js","webpack:///./assets/JavaScript/levels/level_three.js","webpack:///./assets/JavaScript/levels/level_two.js","webpack:///./assets/JavaScript/levels/level_one.js","webpack:///./assets/JavaScript/levels/tutorial.js","webpack:///./assets/JavaScript/levels/all_levels.js","webpack:///./assets/JavaScript/game_objects/tile.js","webpack:///./assets/JavaScript/game_objects/level_generator.js","webpack:///./assets/JavaScript/game_objects/clock.js","webpack:///./assets/JavaScript/game_objects/display.js","webpack:///./assets/JavaScript/game_objects/controls.js","webpack:///./assets/JavaScript/game_objects/block.js","webpack:///./assets/JavaScript/game.js","webpack:///./assets/JavaScript/blockhead.js","webpack:///./assets/JavaScript/levels/level_five.js","webpack:///./assets/JavaScript/levels/level_eight.js","webpack:///./assets/JavaScript/levels/level_seven.js","webpack:///./assets/JavaScript/levels/level_six.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rectangleSound","document","getElementById","squareSound","bridgeSound","fallSound","completeLevelSound","warpSound","gameMusic","menuMusic","loop","playBlockSound","block","height","width","play","playFallSound","playGoalSound","playWarpSound","playBridgeSound","GameMusic","[object Object]","this","playMusic","currentMusic","toggleMusic","musicButton","musicDisplay","pauseStatus","newMusic","currentTime","pause","addButton","id","event","text","musicIcon","createElement","setAttribute","className","appendChild","addSoundIcon","addEventListener","e","preventDefault","pauseMusic","resumeMusic","display","game","controls","drawMenu","boardSize","startParams","startGame","controlsParams","showControls","drawControls","backParams","redrawMenu","removeButton","floorDimensions","xRange","yRange","floorData","x","y","type","tutorial","levelOne","levelTwo","levelThree","levelFour","levelFive","levelSix","levelSeven","levelEight","1","2","3","4","5","6","7","8","options","xPos","yPos","typeReference","active","checkActiveStatus","relations","status","undefined","Tile","allLevels","currentLevel","levelData","constructedFloor","currentStartPosition","constructTileCoordinates","length","generateLevel","getStart","floor","position","tile","level","startPosition","centerFloor","setCoordinates","floorWidth","floorHeight","Math","newFloor","forEach","tileData","tileOptions","tilePosition","relation","push","currentPosition","tiles","lookupTile","toggleActive","gameTimeSeconds","gameTime","seconds","minutes","colors","backgroundColor","textColor","blockColor","blockFallingColor","tileColors","start","goal","none","collapsible","warp","activator","bridge","fonts","mediumFontSize","largeFontSize","clock","ctx","drawTime","fillStyle","font","fillRect","fillText","levelNumber","moves","falls","drawFloor","strokeRect","displayTime","stringifyTime","upTick","colorData","concat","coordinates","corner","getImageData","data","slice","stringifyRGBData","timeTaken","resetClock","setMoveButtons","arrows","left","up","right","down","props","container","button","innerText","removeEventListener","parentNode","removeChild","clearInterval","timerId","quit","move","drawPause","pauseGame","render","displayOptions","drawBlock","endGame","setInterval","runClock","resumeGame","restartGame","music","levels","resetCurrentLevel","switchTrack","restart","getMove","keyCode","transformBlock","dx","dy","expand","checkDimensionsAndMovement","expandWidth","expandHeight","contractWidth","contractHeight","changePosition","Block","Display","LevelGenerator","Menu","sound","menu","startMenu","drawStart","constructFloor","setPosition","setupSoundButton","controlsMenu","includes","checkBlock","drawQuit","getCoordinates","tileMovesOffFloor","resetLevel","checkTile","reRender","nextLevel","activate","drawFinish","setTimeout","flashFailure","drawFail","resetBlock","Game","blockheadBoard","blockheadBoardContainer","getContext","offsetWidth","offsetHeight"],"mappings":"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AC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAA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EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAwB,YAAA,QACA1B,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,IAAAwB,YAAA,QACA1B,EA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AC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,sBCJTnG,EAAAD,SA/EA8F,iBAAsBC,OAAA,GAAAC,OAAA,IACtBC,YACSC,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAwB,YAAA,0BACA1B,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAwB,YAAA,cACA1B,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAsB,QAAA,IACAxB,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,IAAAwB,YAAA,cACA1B,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const rectangleSound = document.getElementById(\"block-rectangle\");\nconst squareSound = document.getElementById(\"block-square\");\nconst bridgeSound = document.getElementById(\"bridge-down\");\nconst fallSound = document.getElementById(\"fall\");\nconst completeLevelSound = document.getElementById(\"complete-level\");\nconst warpSound = document.getElementById(\"warp\");\nconst gameMusic = document.getElementById(\"game-song\");\nconst menuMusic = document.getElementById(\"menu-song\");\n\nmenuMusic.loop = true;\ngameMusic.loop = true;\n\nclass GameMusic {\n    constructor() {\n        this.playMusic = true;\n        this.currentMusic = menuMusic;\n\n        this.toggleMusic = this.toggleMusic.bind(this);\n        this.musicButton = null;\n        this.musicDisplay = null;\n    }\n\n    switchTrack(pauseStatus) {\n        const newMusic = pauseStatus === true ? menuMusic : gameMusic;\n        this.currentMusic.currentTime = 0;\n        if (this.playMusic === true) {\n            this.currentMusic.pause();\n            this.currentMusic = newMusic;\n            this.currentMusic.play();\n        } else {\n            this.currentMusic = newMusic;\n        }\n    }\n\n    setupSoundButton(addButton) {\n        addButton({ id: \"music\", event: this.toggleMusic, text: null });\n        addSoundIcon(this.musicButton);\n        this.musicButton = document.getElementById(\"music\");\n        this.musicDisplay = document.getElementById(\"music-icon\");\n        this.musicButton.addEventListener(\"click\", this.toggleMusic);\n    }\n\n    toggleMusic(e) {\n        e.preventDefault();\n        this.playMusic === true ? this.pauseMusic() : this.resumeMusic();\n    }\n\n    pauseMusic() {\n        this.playMusic = false;\n        this.musicDisplay.className = \"fas fa-volume-mute fa-2x\";\n        this.currentMusic.pause();\n    }\n\n    resumeMusic() {\n        this.playMusic = true;\n        this.musicDisplay.className = \"fas fa-volume-up fa-2x\";\n        this.currentMusic.play();\n    }\n}\n\nfunction addSoundIcon() {\n    const musicIcon = document.createElement(\"i\");\n    musicIcon.setAttribute(\"id\", \"music-icon\");\n    musicIcon.className = \"fas fa-volume-up fa-2x\";\n    const musicButton = document.getElementById(\"music\");\n    musicButton.appendChild(musicIcon);\n}\n\nfunction playBlockSound(block) {\n    block.height === block.width ?\n        squareSound.play() : rectangleSound.play();\n}\n\nfunction playFallSound() {\n    fallSound.play();\n}\n\nfunction playGoalSound() {\n    completeLevelSound.play();\n}\n\nfunction playWarpSound() {\n    warpSound.play();\n}\n\nfunction playBridgeSound() {\n    bridgeSound.play();\n}\n\nmodule.exports = {\n    playBlockSound,\n    playFallSound,\n    playGoalSound,\n    playWarpSound,\n    playBridgeSound,\n    GameMusic\n};\n","class Menu {\n    start(display, game, controls) {\n        display.drawMenu(game.boardSize);\n        const startParams = { id: \"start-button\", event: game.startGame, text: \"Start\" };\n        const controlsParams = { id: \"controls-button\", event: game.showControls, text: \"Controls\" };\n        // const tutorialParams = { id: \"tutorial-button\", event: game.startTutorial, text: Tutorial };\n        controls.addButton(startParams);\n        // controls.addButton(tutorialParams);\n        controls.addButton(controlsParams);\n    }\n\n    controlsMenu(display, game, controls) {\n        display.drawControls(game.boardSize);\n        const backParams = { id: \"back-button\", event: game.redrawMenu, text: \"Back\" };\n        controls.addButton(backParams);\n        controls.removeButton({ id: \"start-button\", event: game.startGame });\n        // controls.removeButton({ id: \"tutorial-button\", event: game.startTutorial });\n        controls.removeButton({ id: \"controls-button\", event: game.showControls });\n    }\n}\n\nmodule.exports = Menu;\n","const levelFour = {\n    floorDimensions: { xRange: 14, yRange: 10, },\n    floorData: [\n        { x: 0, y: 6, type: \"s\" },\n        { x: 13, y: 5, type: \"g\" },\n        { x: 1, y: 6, type: \"n\" },\n        { x: 2, y: 6, type: \"n\" },\n        { x: 3, y: 6, type: \"n\" },\n        { x: 4, y: 6, type: \"n\" },\n        { x: 4, y: 5, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n        { x: 5, y: 9, type: \"n\" },\n        { x: 5, y: 8, type: \"n\" },\n        { x: 5, y: 7, type: \"n\" },\n        { x: 5, y: 6, type: \"n\" },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 9, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 1, type: \"n\" },\n        { x: 7, y: 9, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 1, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 9, type: \"n\" },\n        { x: 8, y: 8, type: \"n\" },\n        { x: 8, y: 7, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 1, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" },\n        { x: 9, y: 9, type: \"n\" },\n        { x: 9, y: 8, type: \"n\" },\n        { x: 9, y: 7, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 2, type: \"n\" },\n        { x: 9, y: 1, type: \"n\" },\n        { x: 9, y: 0, type: \"n\" },\n        { x: 10, y: 9, type: \"n\" },\n        { x: 10, y: 8, type: \"n\" },\n        { x: 10, y: 7, type: \"n\" },\n        { x: 10, y: 3, type: \"n\" },\n        { x: 10, y: 2, type: \"n\" },\n        { x: 10, y: 1, type: \"n\" },\n        { x: 11, y: 7, type: \"n\" },\n        { x: 11, y: 6, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 12, y: 7, type: \"n\" },\n        { x: 12, y: 6, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 13, y: 6, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelFour;\n","const levelThree = {\n    floorDimensions: { xRange: 15, yRange: 6, },\n    floorData: [\n        { x: 1, y: 2, type: \"s\" },\n        { x: 13, y: 2, type: \"g\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 4, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 9, y: 5, type: \"n\" },\n        { x: 10, y: 5, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 4, type: \"n\" },\n        { x: 11, y: 3, type: \"n\" },\n        { x: 11, y: 2, type: \"n\" },\n        { x: 11, y: 1, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 12, y: 4, type: \"n\" },\n        { x: 12, y: 3, type: \"n\" },\n        { x: 12, y: 2, type: \"n\" },\n        { x: 12, y: 1, type: \"n\" },\n        { x: 12, y: 0, type: \"n\" },\n        { x: 13, y: 3, type: \"n\" },\n        { x: 13, y: 1, type: \"n\" },\n        { x: 13, y: 0, type: \"n\" },\n        { x: 14, y: 3, type: \"n\" },\n        { x: 14, y: 2, type: \"n\" },\n        { x: 14, y: 1, type: \"n\" },\n        { x: 14, y: 0, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelThree;\n","const levelTwo = {\n    floorDimensions: { xRange: 10, yRange: 6, },\n    floorData: [\n        { x: 1, y: 1, type: \"s\" },\n        { x: 7, y: 4, type: \"g\" },\n        { x: 0, y: 0, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 1, type: \"n\" },\n        { x: 5, y: 2, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelTwo;\n","const levelOne = {\n    floorDimensions: { xRange: 10, yRange: 1, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 9, y: 0, type: \"g\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 5, y: 0, type: \"n\" },\n        { x: 6, y: 0, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" }\n    ],\n};\n\nmodule.exports = levelOne;\n","const tutorial = {\n    floorDimensions: { xRange: 5, yRange: 5, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 2, y: 2, type: \"g\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = tutorial;\n","const tutorial = require(\"./tutorial\");\nconst levelOne = require(\"./level_one\");\nconst levelTwo = require(\"./level_two\");\nconst levelThree = require(\"./level_three\");\nconst levelFour = require(\"./level_four\");\nconst levelFive = require(\"./level_five\");\nconst levelSix = require(\"./level_six\");\nconst levelSeven = require(\"./level_seven\");\nconst levelEight = require(\"./level_eight\");\n// const levelNine = require(\"./level_nine\");\n\nmodule.exports = {\n    tutorial: tutorial,\n    1: levelOne,\n    2: levelTwo,\n    3: levelThree,\n    4: levelFour,\n    5: levelFive,\n    6: levelSix,\n    7: levelSeven,\n    8: levelEight,\n    // 9: levelNine,\n};\n","class Tile {\n    constructor(options) {\n        this.xPos = options.x;\n        this.yPos = options.y;\n        this.type = this.typeReference(options.type);\n        this.active = this.checkActiveStatus(options.active);\n        this.relations = options.relations;\n    }\n\n    typeReference(type) {\n        switch(type) {\n        case \"n\":\n            return \"none\";\n        case \"s\":\n            return \"start\";\n        case \"g\":\n            return \"goal\";\n        case \"c\":\n            return \"collapsible\";\n        case \"w\":\n            return \"warp\";\n        case \"a\":\n            return \"activator\";\n        case \"b\":\n            return \"bridge\";\n        }\n    }\n\n    checkActiveStatus(status) {\n        return status === undefined ? true : status;\n    }\n\n    toggleActive() {\n        if (this.type === \"bridge\") {\n            this.active = !this.active;\n        }\n    }\n}\n\nmodule.exports = Tile;\n","const Tile = require(\"./tile\");\nconst allLevels = require(\"../levels/all_levels\");\n\nclass LevelGenerator {\n    constructor() {\n        this.currentLevel = 1;\n        this.levelData = allLevels;\n        this.constructedFloor = null;\n        this.currentStartPosition = null;\n\n        this.constructTileCoordinates = this.constructTileCoordinates.bind(this);\n    }\n\n    nextLevel() {\n        this.currentLevel += 1;\n    }\n\n    resetCurrentLevel() {\n        this.currentLevel = 1;\n    }\n\n    constructFloor(length, boardSize) {\n        this.constructedFloor = this.generateLevel(length, boardSize);\n        this.currentStartPosition = this.getStart(this.constructedFloor);\n    }\n\n    getStart(floor) {\n        for (var position in floor) {\n            let tile = floor[position];\n            if (tile.type === \"start\") {\n                return { xPos: tile.xPos, yPos: tile.yPos };\n            }\n        }\n    }\n\n    generateLevel(length, boardSize) {\n        const level = this.levelData[this.currentLevel];\n        const startPosition = this.centerFloor(level.floorDimensions, length, boardSize);\n        return this.setCoordinates(level.floorData, startPosition, length);\n    }\n\n    // Tiles are positioned relative to the position of the top-left tile on a floor.\n    centerFloor(floorDimensions, length, boardSize) {\n        const {width, height } = boardSize;\n        const floorWidth = floorDimensions.xRange * length;\n        const floorHeight = floorDimensions.yRange * length;\n        const startCornerXPos = Math.floor((width - floorWidth) / 2);\n        const startCornerYPos = Math.floor((height - floorHeight) / 2);\n        return { xPos: startCornerXPos, yPos: startCornerYPos };\n    }\n\n    setCoordinates(floorData, startPosition, length) {\n        const newFloor = {};\n        floorData.forEach(tileData => {\n            let tileOptions = this.constructTileCoordinates(tileData, startPosition, length);\n            let tile = new Tile(tileOptions);\n            let tilePosition = `[${tile.xPos}, ${tile.yPos}]`;\n            newFloor[tilePosition] = tile;\n        });\n        return newFloor;\n    }\n\n    constructTileCoordinates(tileData, startPosition, length) {\n        const x = startPosition.xPos + length * tileData.x;\n        const y = startPosition.yPos + length * tileData.y;\n        let relations = null;\n        if (tileData.relations !== undefined) {\n            relations = [];\n            tileData.relations.forEach(relation => {\n                let xPos = startPosition.xPos + length * relation[0];\n                let yPos = startPosition.yPos + length * relation[1];\n                relations.push({ xPos, yPos });\n            });\n        }\n        return { x: x, y: y, type: tileData.type, active: tileData.active, relations };\n    }\n\n    lookupTile(position) {\n        const currentPosition = `[${position.xPos}, ${position.yPos}]`;\n        return this.constructedFloor[currentPosition];\n    }\n\n    activate(tiles) {\n        tiles.forEach(position => {\n            let tile = this.lookupTile(position);\n            tile.toggleActive();\n        });\n    }\n}\n\nmodule.exports = LevelGenerator;\n","class GameClock {\n    constructor() {\n        this.gameTimeSeconds = 0;\n    }\n\n    resetClock() {\n        this.gameTimeSeconds = 0;\n    }\n\n    upTick() {\n        this.gameTimeSeconds += 1;\n    }\n\n    currentTime() {\n        const gameTime = this.gameTimeSeconds;\n        const seconds = gameTime % 60;\n        const minutes = Math.floor(gameTime / 60) % 60;\n        return { minutes, seconds };\n    }\n}\n\nmodule.exports = GameClock;\n","const GameClock = require(\"./clock\");\n\nconst colors = {\n    backgroundColor: \"rgb(25, 25, 25)\",\n    textColor: \"rgb(255, 255, 255)\",\n    blockColor: \"rgb(200, 0, 255)\",\n    blockFallingColor: \"rgb(255, 0, 0)\",\n    tileColors: {\n        start: \"rgb(0, 255, 255)\",\n        goal: \"rgb(0, 255, 0)\",\n        none: \"rgb(192, 192, 192)\",\n        collapsible: \"rgb(255, 128, 0)\",\n        warp: \"rgb(255, 255, 0)\",\n        activator: \"rgb(255, 255, 255)\",\n        bridge: \"rgb(128, 0, 0)\",\n    }\n};\n\nconst fonts = {\n    mediumFontSize: \"30px Russo One, sans-serif\",\n    largeFontSize: \"50px Russo One, sans-serif\",\n};\n\n// function resizeCanvas() {\n//     canvas.width = window.innerWidth;\n//     canvas.height = window.innerHeight;\n//     ctx.fillStyle = \"red\";\n//     ctx.fillRect(0,0, l1.length, l2.length);\n//     ctx.fillStyle = \" blue\";\n//     ctx.fillText(\"Hi\", canvas.width / 2, canvas.height / 2);\n// }\n// window.addEventListener(\"resize\", resizeCanvas);\n\nconst clock = new GameClock();\n\nclass Display {\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.drawTime = this.drawTime.bind(this);\n    }\n\n    drawStart(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Click anywhere\", width / 2 - 200, height / 2);\n        this.ctx.fillText(\"to begin\", width / 2 - 125, height / 2 + 50);\n    }\n\n    render(options) {\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height - 100);\n        this.ctx.fillRect(0, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(`Level ${options.levelNumber}`, 100, 100);\n        this.ctx.fillText(`Moves: ${options.moves}`, width - 200, 100);\n        this.ctx.fillText(`Falls: ${options.falls}`, 100, height - 50);\n        this.drawFloor(options.level, options.length);\n    }\n\n    drawFloor(floor, length) {\n        for (var position in floor) {\n            let tile = floor[position];\n            this.ctx.fillStyle = tile.active ?\n                colors.tileColors[tile.type] : colors.backgroundColor;\n            const { xPos, yPos } = tile;\n            this.ctx.fillRect(xPos, yPos, length, length);\n            this.ctx.strokeRect(xPos, yPos, length, length);\n        }\n    }\n\n    drawMenu(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Blockhead\", width / 2 - 125, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"a game by Michael Johnson\", width / 2 - 200, height / 3);\n    }\n\n    drawControls(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0,0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Controls:\", width / 2 - 100, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"Up: up-arrow\", width / 2 - 100, height * 3 / 8);\n        this.ctx.fillText(\"Down: down-arrow\", width / 2 - 100, height / 2);\n        this.ctx.fillText(\"Left: left-arrow\", width / 2 - 100, height * 5 / 8);\n        this.ctx.fillText(\"Right: right-arrow\", width / 2 - 100, height * 3 / 4);\n    }\n\n    stringifyTime() {\n        const { minutes, seconds } = clock.currentTime();\n\n        const minuteString = (minutes < 10) ? `0${minutes}` : minutes;\n        const secondString = (seconds < 10) ? `0${seconds}` : seconds;\n\n        return `${minuteString}:${secondString}`;\n    }\n\n    drawTime(boardSize) {\n        const { width, height } = boardSize;\n        const displayTime = this.stringifyTime();\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(width / 2, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(displayTime, width - 200, height - 50);\n        clock.upTick();\n    }\n\n    drawBlock(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n        this.ctx.strokeRect(xPos, yPos, width, height);\n    }\n\n    stringifyRGBData(colorData) {\n        return \"rgb(\".concat(colorData[0])\n            .concat(\", \")\n            .concat(colorData[1])\n            .concat(\", \")\n            .concat(colorData[2])\n            .concat(\")\");\n    }\n\n    tileMovesOffFloor(coordinates) {\n        for(let i = 0; i < coordinates.length; i++) {\n            let corner = coordinates[i];\n            let point = this.ctx.getImageData(corner[0], corner[1], 1, 1);\n            let colorData = point.data.slice(0, 3);\n            let color = this.stringifyRGBData(colorData);\n            if (color === colors.backgroundColor) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    drawPause(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Pause\", width / 2 - 100, height / 2);\n        this.ctx.font = fonts.mediumFontSize;\n    }\n\n    drawFail(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockFallingColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n    }\n\n    drawQuit(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Really quit?\", width / 2 - 100, height / 2);\n    }\n\n    drawFinish(options) {\n        const timeTaken = this.stringifyTime();\n        clock.resetClock();\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Final Tally:\", width / 2 - 200, height / 5);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(`Final Level Completed: ${options.levelNumber - 1}`, width / 2 - 150, height * 3 / 10);\n        this.ctx.fillText(`Moves: ${options.moves}`, width / 2 - 150, height * 2 / 5);\n        this.ctx.fillText(`Falls: ${options.falls}`, width / 2 - 150, height / 2);\n        this.ctx.fillText(`Time: ${timeTaken}`, width / 2 - 150, height * 3 / 5);\n        this.ctx.fillText(\"Click to start over\", width / 2 - 200, height * 7 / 10);\n    }\n}\n\nmodule.exports = Display;\n","function pause(game) {\n    game.pauseStatus = !game.pauseStatus;\n    game.pauseStatus === true ? pauseGame(game) : resumeGame(game);\n}\n\nfunction resumeGame(game) {\n    game.display.render(game.displayOptions());\n    game.display.drawBlock(game.block);\n    document.addEventListener(\"keydown\", game.move);\n    setMoveButtons(game);\n    removeButton({ id: \"quit-button\", event: game.quit });\n    if (document.getElementById(\"pause-button\") === null) {\n        addButton({ id: \"pause-button\", text: \"Pause\", event: game.pause });\n        removeButton({ id: \"yes-button\", event: this.endGame });\n        removeButton({ id: \"no-button\", event: this.pause });\n    }\n    game.timerId = setInterval(game.runClock, 1000);\n}\n\nfunction pauseGame(game) {\n    clearInterval(game.timerId);\n    setMoveButtons(game);\n    addButton({ id: \"quit-button\", text: \"Quit\", event: game.quit });\n    document.removeEventListener(\"keydown\", game.move);\n    game.display.drawPause(game.boardSize);\n}\n\nfunction getMove(e, block, length, move) {\n    e.preventDefault();\n    if (e.keyCode === 40 || move === \"down\") { // down arrow\n        block.transformBlock(0, 1 * length);\n    } else if (e.keyCode === 39 || move === \"right\") { // right arrow key\n        block.transformBlock(1 * length, 0);\n    } else if (e.keyCode === 38 || move === \"up\") { // up arrow key\n        block.transformBlock(0, -1 * length);\n    } else if (e.keyCode === 37 || move === \"left\") { // left arrow key\n        block.transformBlock(-1 * length, 0);\n    }\n}\n\nfunction restartGame(e, game, music) {\n    game.moves = 0;\n    game.falls = 0;\n    game.levels.resetCurrentLevel();\n    music.switchTrack(game.pauseStatus);\n    game.redrawMenu(e);\n    const board = document.getElementById(\"canvas-container\");\n    board.removeEventListener(\"click\", game.restart);\n}\n\nfunction setMoveButtons(game) {\n    const arrows = [\n        { text: \"\\u2190\", id: \"left\", event: game.left },\n        { text: \"\\u2191\", id: \"top\", event: game.up },\n        { text: \"\\u2192\", id: \"right\", event:game.right },\n        { text: \"\\u2193\", id: \"bottom\", event: game.down }\n    ];\n\n    if (game.pauseStatus === false) {\n        arrows.forEach(props => addButton(props));\n    } else {\n        arrows.forEach(props => removeButton(props));\n    }\n}\n\nfunction addButton({ id, text, event }) {\n    const container = document.getElementById(\"canvas-container\");\n    const button = document.createElement(\"button\");\n    button.setAttribute(\"id\", id);\n    button.innerText = text;\n    button.addEventListener(\"click\", event);\n    container.appendChild(button);\n}\n\nfunction removeButton({ id, event }) {\n    const button = document.getElementById(id);\n    if (button !== null) {\n        button.removeEventListener(\"click\", event);\n        button.parentNode.removeChild(button);\n    }\n}\n\nmodule.exports = { pause,\n    restartGame,\n    getMove,\n    setMoveButtons,\n    addButton,\n    removeButton,\n};\n","class Block {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.xPos = undefined;\n        this.yPos = undefined;\n    }\n\n    setPosition(coordinates) {\n        this.xPos = coordinates.xPos;\n        this.yPos = coordinates.yPos;\n    }\n\n    resetBlock(length, startPosition) {\n        this.width = length;\n        this.height = length;\n        this.xPos = startPosition.xPos;\n        this.yPos = startPosition.yPos;\n    }\n\n    changePosition(dx, dy) {\n        this.xPos += dx;\n        this.yPos += dy;\n    }\n\n    transformBlock(x, y) {\n        this.width === this.height ?\n            this.expand(x, y) : this.checkDimensionsAndMovement(x, y);\n    }\n\n    expand(x, y) {\n        x !== 0 ? this.expandWidth(x, y) : this.expandHeight(x, y);\n    }\n\n    // To simulate a rectangular prism, the block's dimensions and\n    // position must change differently depending on its current size and\n    // the direction it moves.\n    checkDimensionsAndMovement(x, y) {\n        if (this.width > this.height && x !== 0) {\n            this.contractWidth(x, y);\n        } else if (this.width < this.height && y !== 0) {\n            this.contractHeight(x, y);\n        } else {\n            this.changePosition(x, y);\n        }\n    }\n\n    expandWidth(x, y) {\n        this.width *= 2;\n        x > 0 ? this.changePosition(x, y) : this.changePosition(2 * x, y);\n    }\n\n    expandHeight(x, y) {\n        this.height *= 2;\n        y > 0 ? this.changePosition(x, y) : this.changePosition(x, 2 * y);\n    }\n\n    contractWidth(x, y) {\n        this.width /= 2;\n        x > 0 ? this.changePosition(2 * x, y) : this.changePosition(x, y);\n    }\n\n    contractHeight(x, y) {\n        this.height /= 2;\n        y > 0 ? this.changePosition(x, y * 2) : this.changePosition(x, y);\n    }\n}\n\nmodule.exports = Block;\n","const Block = require(\"./game_objects/block\");\nconst controls = require(\"./game_objects/controls\");\nconst Display = require(\"./game_objects/display\");\nconst LevelGenerator = require(\"./game_objects/level_generator\");\nconst Menu = require(\"./game_objects/menu\");\nconst sound = require(\"./game_objects/sound\");\n\nconst GameMusic = new sound.GameMusic();\n\nclass Game {\n    constructor(ctx, length, boardSize) {\n        this.boardSize = boardSize;\n        this.length = length;\n        this.pauseStatus = true;\n        this.moves = 0;\n        this.falls = 0;\n\n        this.display = new Display(ctx);\n        this.levels = new LevelGenerator();\n        this.block = new Block(length, length);\n        this.menu = new Menu();\n\n        this.move = this.move.bind(this);\n        this.pause = this.pause.bind(this);\n        this.restart = this.restart.bind(this);\n        this.startMenu = this.startMenu.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.showControls = this.showControls.bind(this);\n        this.redrawMenu = this.redrawMenu.bind(this);\n        this.runClock = this.runClock.bind(this);\n        this.up = this.up.bind(this);\n        this.right = this.right.bind(this);\n        this.left = this.left.bind(this);\n        this.down = this.down.bind(this);\n        this.quit = this.quit.bind(this);\n        this.endGame = this.endGame.bind(this);\n    }\n\n    start() {\n        this.display.drawStart(this.boardSize);\n        const board = document.getElementById(\"canvas-container\");\n        board.addEventListener(\"click\", this.startMenu);\n    }\n\n    startGame(e) {\n        e.preventDefault();\n        this.pauseStatus = false;\n        controls.removeButton({ id: \"start-button\", event: this.startGame });\n        // controls.removeButton({ id: \"tutorial-button\", event: this.startTutorial });\n        controls.removeButton({ id: \"controls-button\", event: this.showControls });\n        controls.setMoveButtons(this);\n        controls.addButton({id: \"pause-button\", event: this.pause, text: \"Pause\" });\n        GameMusic.switchTrack(this.pauseStatus);\n        this.levels.constructFloor(this.length, this.boardSize);\n        this.block.setPosition(this.levels.currentStartPosition);\n        this.timerId = setInterval(this.runClock, 1000);\n        document.addEventListener(\"keydown\", this.move);\n        this.display.render(this.displayOptions());\n        this.display.drawBlock(this.block);\n    }\n\n    // startTutorial(e) {\n    //     e.preventDefault();\n    //     controls.removeButton({ id: \"start-button\", event: this.startGame });\n    //     controls.removeButton({ id: \"tutorial-button\", event: this.startTutorial });\n    //     controls.removeButton({ id: \"controls-button\", event: this.showControls });\n    // }\n\n    startMenu(e) {\n        e.preventDefault();\n        this.menu.start(this.display, this, controls);\n        GameMusic.setupSoundButton(controls.addButton);\n        GameMusic.switchTrack(this.pauseStatus);\n        const board = document.getElementById(\"canvas-container\");\n        board.removeEventListener(\"click\", this.startMenu);\n    }\n\n    redrawMenu(e) {\n        e.preventDefault();\n        controls.removeButton({ id: \"back-button\", event: this.redrawMenu  });\n        this.menu.start(this.display, this, controls);\n    }\n\n    showControls(e) {\n        e.preventDefault();\n        this.menu.controlsMenu(this.display, this, controls);\n    }\n\n    runClock() {\n        this.display.drawTime(this.boardSize);\n    }\n\n    restart(e) {\n        controls.restartGame(e, this, GameMusic);\n    }\n\n    move(e) {\n        const arrowKeycodes = [37, 38, 39, 40];\n        if (arrowKeycodes.includes(e.keyCode)) {\n            controls.getMove(e, this.block, this.length, null);\n            this.moves += 1;\n            this.checkBlock();\n        }\n    }\n\n    up(e) {\n        controls.getMove(e, this.block, this.length, \"up\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    right(e) {\n        controls.getMove(e, this.block, this.length, \"right\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    down(e) {\n        controls.getMove(e, this.block, this.length, \"down\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    left(e) {\n        controls.getMove(e, this.block, this.length, \"left\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    pause(e) {\n        e.preventDefault();\n        controls.pause(this);\n    }\n\n    quit(e) {\n        e.preventDefault();\n        this.display.drawQuit(this.boardSize);\n        controls.removeButton({ id: \"pause-button\", event: this.pause });\n        controls.removeButton({ id: \"quit-button\", event: this.quit });\n        controls.addButton({ id: \"yes-button\", event: this.endGame, text: \"Yes\" });\n        controls.addButton({ id: \"no-button\", event: this.pause, text: \"No\" });\n    }\n\n    displayOptions() {\n        return {\n            level: this.levels.constructedFloor,\n            levelNumber: this.levels.currentLevel,\n            moves: this.moves,\n            falls: this.falls,\n            length: this.length,\n            boardSize: this.boardSize,\n        };\n    }\n\n    checkBlock() {\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] !== undefined) {\n            const coordinates = this.getCoordinates();\n            if (this.display.tileMovesOffFloor(coordinates)) {\n                this.resetLevel();\n            } else if (this.block.width === this.block.height) {\n                this.checkTile();\n            } else {\n                this.reRender();\n            }\n        }\n    }\n\n    checkTile() {\n        const { xPos, yPos } = this.block;\n        const tile = this.levels.lookupTile({ xPos, yPos });\n        if (tile.type === \"goal\") {\n            this.nextLevel();\n        } else if (tile.type === \"collapsible\") {\n            this.resetLevel();\n        } else if (tile.type === \"warp\") {\n            this.warp(tile.relations[0]);\n        } else if (tile.type === \"activator\") {\n            this.levels.activate(tile.relations);\n            sound.playBridgeSound();\n            this.reRender();\n        } else {\n            this.reRender();\n        }\n    }\n\n    warp(position) {\n        sound.playWarpSound();\n        this.block.setPosition(position);\n        this.reRender();\n    }\n\n    reRender() {\n        this.display.render(this.displayOptions());\n        this.display.drawBlock(this.block);\n        sound.playBlockSound(this.block);\n    }\n\n    nextLevel() {\n        sound.playGoalSound();\n        this.levels.nextLevel();\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] === undefined) {\n            this.endGame();\n        } else {\n            this.levels.constructFloor(this.length, this.boardSize);\n            this.block.setPosition(this.levels.currentStartPosition);\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n        }\n    }\n\n    endGame(e) {\n        this.pauseStatus = true;\n        if (e !== undefined) {\n            e.preventDefault();\n            controls.removeButton({ id: \"yes-button\", event: this.endGame });\n            controls.removeButton({ id: \"no-button\", event: this.pause });\n        } else {\n            document.removeEventListener(\"keydown\", this.move);\n            controls.removeButton({ id: \"pause-button\", event: this.pause });\n            clearInterval(this.timerId);\n            controls.setMoveButtons(this);\n        }\n        this.display.drawFinish(this.displayOptions());\n        setTimeout(() => {\n            const board = document.getElementById(\"canvas-container\");\n            board.addEventListener(\"click\", this.restart);\n        }, 500);\n    }\n\n    // gets current position of block. Coordinates are set to avoid bugs related\n    // to narrow gaps.\n    getCoordinates() {\n        const { xPos, yPos, width, height } = this.block;\n        return [\n            [xPos + Math.floor(width / 4), yPos + Math.floor(height / 4)],\n            [xPos + Math.floor(width * 3 / 4), yPos + Math.floor(height * 3 / 4)],\n        ];\n    }\n\n    resetLevel() {\n        this.pauseStatus = true;\n        document.removeEventListener(\"keydown\", this.move);\n        controls.setMoveButtons(this);\n        this.falls += 1;\n        this.flashFailure();\n    }\n\n    flashFailure() {\n        this.display.render(this.displayOptions());\n        this.display.drawFail(this.block);\n        sound.playFallSound();\n        this.block.resetBlock(this.length, this.levels.currentStartPosition);\n        setTimeout(() => {\n            this.pauseStatus = false;\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n            document.addEventListener(\"keydown\", this.move);\n            controls.setMoveButtons(this);\n        }, 800);\n    }\n}\n\nmodule.exports = Game;\n","const Game = require(\"./game\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const blockheadBoard = document.getElementById(\"blockhead\");\n    const blockheadBoardContainer = document.getElementById(\"canvas-container\");\n    const ctx = blockheadBoard.getContext(\"2d\");\n\n    const boardSize = {\n        width: blockheadBoardContainer.offsetWidth,\n        height: blockheadBoardContainer.offsetHeight,\n    };\n    blockheadBoard.width = boardSize.width;\n    blockheadBoard.height = boardSize.height;\n\n    new Game(ctx, 30, boardSize).start();\n});","const levelFive = {\n    floorDimensions: { xRange: 14, yRange: 9 },\n    floorData: [\n        { x: 1, y: 5, type: \"s\" },\n        { x: 13, y: 7, type: \"g\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 0, y: 5, type: \"n\" },\n        { x: 0, y: 6, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 6, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 5, type: \"n\" },\n        { x: 2, y: 6, type: \"n\" },\n        { x: 3, y: 0, type: \"c\" },\n        { x: 3, y: 1, type: \"c\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 4, y: 0, type: \"c\" },\n        { x: 4, y: 1, type: \"c\" },\n        { x: 5, y: 0, type: \"c\" },\n        { x: 5, y: 1, type: \"c\" },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 6, type: \"n\" },\n        { x: 5, y: 7, type: \"n\" },\n        { x: 5, y: 8, type: \"n\" },\n        { x: 6, y: 0, type: \"c\" },\n        { x: 6, y: 1, type: \"c\" },\n        { x: 6, y: 2, type: \"w\", relations: [[9, 2]] },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 6, type: \"n\" },\n        { x: 6, y: 7, type: \"n\" },\n        { x: 6, y: 8, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 6, type: \"n\" },\n        { x: 7, y: 7, type: \"n\" },\n        { x: 7, y: 8, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 8, y: 6, type: \"n\" },\n        { x: 9, y: 2, type: \"n\" },\n        { x: 9, y: 5, type: \"c\" },\n        { x: 9, y: 6, type: \"c\" },\n        { x: 10, y: 2, type: \"n\" },\n        { x: 10, y: 3, type: \"n\" },\n        { x: 10, y: 4, type: \"n\" },\n        { x: 10, y: 5, type: \"c\" },\n        { x: 10, y: 6, type: \"c\" },\n        { x: 10, y: 7, type: \"c\" },\n        { x: 10, y: 8, type: \"c\" },\n        { x: 10, y: 9, type: \"c\" },\n        { x: 11, y: 2, type: \"n\" },\n        { x: 11, y: 3, type: \"n\" },\n        { x: 11, y: 4, type: \"n\" },\n        { x: 11, y: 5, type: \"c\" },\n        { x: 11, y: 6, type: \"c\" },\n        { x: 11, y: 7, type: \"c\" },\n        { x: 11, y: 8, type: \"c\" },\n        { x: 11, y: 9, type: \"c\" },\n        { x: 12, y: 5, type: \"c\" },\n        { x: 12, y: 6, type: \"c\" },\n        { x: 12, y: 7, type: \"c\" },\n        { x: 12, y: 8, type: \"c\" },\n        { x: 12, y: 9, type: \"w\", relations: [[6, 8]] },\n        { x: 13, y: 5, type: \"c\" },\n        { x: 13, y: 6, type: \"c\" },\n        { x: 13, y: 8, type: \"c\" },\n    ],\n};\n\nmodule.exports = levelFive;\n","const levelEight = {\n    floorDimensions: { xRange: 16, yRange: 8 },\n    floorData: [\n        { x: 14, y: 2, type: \"g\" },\n        { x: 5, y: 6, type: \"s\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 2, y: 0, type: \"w\", relations: [[4, 2]] },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"w\", relations: [[10, 2]] },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 4, y: 2, type: \"w\", relations: [[0, 2]] },\n        { x: 4, y: 5, type: \"n\" },\n        { x: 4, y: 6, type: \"n\" },\n        { x: 4, y: 7, type: \"n\" },\n        { x: 5, y: 2, type: \"b\", active: false },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 7, type: \"n\" },\n        { x: 6, y: 2, type: \"b\", active: false },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 6, type: \"n\" },\n        { x: 6, y: 7, type: \"n\" },\n        { x: 7, y: 2, type: \"a\", relations: [[5, 2], [6, 2]] },\n        { x: 7, y: 6, type: \"n\" },\n        { x: 8, y: 2, type: \"a\", relations: [[11, 2], [12, 2]] },\n        { x: 8, y: 6, type: \"n\" },\n        { x: 9, y: 2, type: \"n\" },\n        { x: 9, y: 6, type: \"n\" },\n        { x: 10, y: 2, type: \"n\" },\n        { x: 10, y: 5, type: \"n\" },\n        { x: 10, y: 6, type: \"n\" },\n        { x: 10, y: 7, type: \"n\" },\n        { x: 11, y: 2, type: \"b\", active: false },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 6, type: \"w\", relations: [[2, 0]] },\n        { x: 11, y: 7, type: \"n\" },\n        { x: 12, y: 2, type: \"b\", active: false },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 12, y: 6, type: \"n\" },\n        { x: 12, y: 7, type: \"n\" },\n        { x: 13, y: 1, type: \"n\" },\n        { x: 13, y: 2, type: \"n\" },\n        { x: 13, y: 3, type: \"n\" },\n        { x: 14, y: 1, type: \"n\" },\n        { x: 14, y: 3, type: \"n\" },\n        { x: 15, y: 1, type: \"n\" },\n        { x: 15, y: 2, type: \"n\" },\n        { x: 15, y: 3, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelEight;\n","const levelSeven = {\n    floorDimensions: { xRange: 14, yRange: 10 },\n    floorData: [\n        { x: 12, y: 3, type: \"s\" },\n        { x: 7, y: 4, type: \"g\" },\n        { x: 0, y: 0, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 0, y: 5, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 5, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 5, type: \"n\" },\n        { x: 2, y: 6, type: \"n\" },\n        { x: 2, y: 7, type: \"n\" },\n        { x: 3, y: 0, type: \"c\" },\n        { x: 3, y: 4, type: \"c\" },\n        { x: 3, y: 7, type: \"n\" },\n        { x: 3, y: 8, type: \"n\" },\n        { x: 3, y: 9, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 4, y: 4, type: \"c\" },\n        { x: 4, y: 7, type: \"n\" },\n        { x: 4, y: 8, type: \"n\" },\n        { x: 4, y: 9, type: \"n\" },\n        { x: 5, y: 0, type: \"n\" },\n        { x: 5, y: 4, type: \"c\" },\n        { x: 5, y: 5, type: \"c\" },\n        { x: 5, y: 6, type: \"c\" },\n        { x: 5, y: 7, type: \"c\" },\n        { x: 5, y: 8, type: \"c\" },\n        { x: 5, y: 9, type: \"n\" },\n        { x: 6, y: 0, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 6, type: \"c\" },\n        { x: 6, y: 7, type: \"c\" },\n        { x: 6, y: 8, type: \"c\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 6, type: \"c\" },\n        { x: 7, y: 7, type: \"n\" },\n        { x: 7, y: 8, type: \"c\" },\n        { x: 8, y: 0, type: \"c\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 8, y: 6, type: \"c\" },\n        { x: 8, y: 7, type: \"c\" },\n        { x: 8, y: 8, type: \"c\" },\n        { x: 8, y: 9, type: \"n\" },\n        { x: 9, y: 0, type: \"n\" },\n        { x: 9, y: 6, type: \"c\" },\n        { x: 9, y: 7, type: \"c\" },\n        { x: 9, y: 8, type: \"c\" },\n        { x: 9, y: 9, type: \"n\" },\n        { x: 10, y: 0, type: \"n\" },\n        { x: 10, y: 1, type: \"n\" },\n        { x: 10, y: 6, type: \"n\" },\n        { x: 10, y: 7, type: \"c\" },\n        { x: 10, y: 8, type: \"c\" },\n        { x: 11, y: 0, type: \"n\" },\n        { x: 11, y: 1, type: \"n\" },\n        { x: 11, y: 2, type: \"n\" },\n        { x: 11, y: 3, type: \"n\" },\n        { x: 11, y: 4, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 6, type: \"n\" },\n        { x: 12, y: 0, type: \"n\" },\n        { x: 12, y: 1, type: \"n\" },\n        { x: 12, y: 2, type: \"n\" },\n        { x: 12, y: 4, type: \"n\" },\n        { x: 13, y: 2, type: \"n\" },\n        { x: 13, y: 3, type: \"n\" },\n        { x: 13, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelSeven;\n","const levelSix = {\n    floorDimensions: { xRange: 16, yRange: 10 },\n    floorData: [\n        { x: 14, y: 1, type: \"s\" },\n        { x: 1, y: 8, type: \"g\" },\n        { x: 0, y: 7, type: \"n\" },\n        { x: 0, y: 8, type: \"n\" },\n        { x: 0, y: 9, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 7, type: \"n\" },\n        { x: 1, y: 9, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 7, type: \"n\" },\n        { x: 2, y: 8, type: \"n\" },\n        { x: 2, y: 9, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 3, y: 5, type: \"n\" },\n        { x: 3, y: 8, type: \"n\" },\n        { x: 3, y: 9, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n        { x: 4, y: 5, type: \"n\" },\n        { x: 4, y: 8, type: \"n\" },\n        { x: 5, y: 1, type: \"b\", active: false },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 8, type: \"b\", active: true },\n        { x: 6, y: 1, type: \"b\", active: false },\n        { x: 6, y: 5, type: \"a\", relations: [[8, 5], [9, 5], [5, 8], [6, 8]] },\n        { x: 6, y: 8, type: \"b\", active: true },\n        { x: 7, y: 1, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 8, type: \"n\" },\n        { x: 8, y: 1, type: \"n\" },\n        { x: 8, y: 5, type: \"b\", active: false },\n        { x: 8, y: 8, type: \"n\" },\n        { x: 9, y: 1, type: \"a\", relations: [[5, 1], [6, 1]] },\n        { x: 9, y: 5, type: \"b\", active: false },\n        { x: 9, y: 8, type: \"n\" },\n        { x: 10, y: 1, type: \"n\" },\n        { x: 10, y: 5, type: \"n\" },\n        { x: 10, y: 6, type: \"n\" },\n        { x: 10, y: 7, type: \"n\" },\n        { x: 10, y: 8, type: \"n\" },\n        { x: 11, y: 1, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 6, type: \"n\" },\n        { x: 11, y: 7, type: \"n\" },\n        { x: 11, y: 8, type: \"n\" },\n        { x: 12, y: 0, type: \"n\" },\n        { x: 12, y: 1, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 12, y: 6, type: \"n\" },\n        { x: 12, y: 7, type: \"n\" },\n        { x: 12, y: 8, type: \"n\" },\n        { x: 13, y: 0, type: \"n\" },\n        { x: 13, y: 1, type: \"n\" },\n        { x: 13, y: 2, type: \"n\" },\n        { x: 13, y: 6, type: \"n\" },\n        { x: 13, y: 7, type: \"n\" },\n        { x: 14, y: 0, type: \"n\" },\n        { x: 14, y: 2, type: \"n\" },\n        { x: 14, y: 6, type: \"a\", relations: [[5, 8], [6, 8]] },\n        { x: 14, y: 7, type: \"n\" },\n        { x: 15, y: 0, type: \"n\" },\n        { x: 15, y: 1, type: \"n\" },\n        { x: 15, y: 2, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelSix;\n"],"sourceRoot":""}