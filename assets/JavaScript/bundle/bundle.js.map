{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/JavaScript/game_objects/sound.js","webpack:///./assets/JavaScript/game_objects/menu.js","webpack:///./assets/JavaScript/levels/level_four.js","webpack:///./assets/JavaScript/levels/level_three.js","webpack:///./assets/JavaScript/levels/level_two.js","webpack:///./assets/JavaScript/levels/level_one.js","webpack:///./assets/JavaScript/levels/tutorial.js","webpack:///./assets/JavaScript/levels/all_levels.js","webpack:///./assets/JavaScript/game_objects/tile.js","webpack:///./assets/JavaScript/game_objects/level_generator.js","webpack:///./assets/JavaScript/game_objects/clock.js","webpack:///./assets/JavaScript/game_objects/display.js","webpack:///./assets/JavaScript/game_objects/controls.js","webpack:///./assets/JavaScript/game_objects/block.js","webpack:///./assets/JavaScript/game.js","webpack:///./assets/JavaScript/blockhead.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rectangleSound","document","getElementById","squareSound","fallSound","completeLevelSound","gameMusic","menuMusic","loop","playBlockSound","block","height","width","play","playFallSound","playGoalSound","GameMusic","[object Object]","this","playMusic","currentMusic","toggleMusic","musicButton","musicDisplay","pauseStatus","newMusic","currentTime","pause","addButton","id","event","text","musicIcon","createElement","setAttribute","className","appendChild","addSoundIcon","addEventListener","e","preventDefault","pauseMusic","resumeMusic","display","game","controls","drawMenu","boardSize","startParams","startGame","controlsParams","showControls","drawControls","backParams","redrawMenu","removeButton","floorDimensions","xRange","yRange","floorData","x","y","type","tutorial","levelOne","levelTwo","levelThree","levelFour","1","2","3","4","options","xPos","yPos","typeReference","active","checkActiveStatus","status","undefined","Tile","allLevels","currentLevel","levelData","constructTileCoordinates","length","constructedFloor","generateLevel","currentStartPosition","getStart","floor","position","tile","level","startPosition","centerFloor","setCoordinates","floorWidth","floorHeight","Math","newFloor","forEach","tileData","tileOptions","tilePosition","currentPosition","gameTimeSeconds","gameTime","seconds","minutes","colors","backgroundColor","textColor","blockColor","blockFallingColor","tileColors","start","goal","none","collapsible","warp","activator","bridge","fonts","mediumFontSize","largeFontSize","clock","ctx","drawTime","fillStyle","font","fillRect","fillText","levelNumber","moves","falls","drawFloor","strokeRect","displayTime","stringifyTime","upTick","colorData","concat","coordinates","corner","getImageData","data","slice","stringifyRGBData","timeTaken","resetClock","setMoveButtons","arrows","left","up","right","down","props","container","button","innerText","removeEventListener","parentNode","removeChild","clearInterval","timerId","move","drawPause","pauseGame","render","displayOptions","drawBlock","setInterval","runClock","resumeGame","restartGame","music","levels","resetCurrentLevel","switchTrack","restart","getMove","keyCode","transformBlock","dx","dy","expand","checkDimensionsAndMovement","expandWidth","expandHeight","contractWidth","contractHeight","changePosition","Block","Display","LevelGenerator","Menu","sound","menu","startMenu","drawStart","constructFloor","setPosition","setupSoundButton","backButton","reDrawMenu","controlsMenu","includes","checkBlock","checkGoal","checkBounds","lookupTile","nextLevel","endGame","drawFinish","setTimeout","getCoordinates","tileMovesOffFloor","resetLevel","flashFailure","drawFail","resetBlock","Game","blockheadBoard","blockheadBoardContainer","getContext","offsetWidth","offsetHeight"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const rectangleSound = document.getElementById(\"block-rectangle\");\nconst squareSound = document.getElementById(\"block-square\");\n// const bridgeUpSound = document.getElementById(\"bridge-up\");\n// const bridgeDownSound = document.getElementById(\"bridge-down\");\nconst fallSound = document.getElementById(\"fall\");\nconst completeLevelSound = document.getElementById(\"complete-level\");\n// const warpSound = document.getElementById(\"warp\");\nconst gameMusic = document.getElementById(\"game-song\");\nconst menuMusic = document.getElementById(\"menu-song\");\n\nmenuMusic.loop = true;\ngameMusic.loop = true;\n\nclass GameMusic {\n    constructor() {\n        this.playMusic = true;\n        this.currentMusic = menuMusic;\n\n        this.toggleMusic = this.toggleMusic.bind(this);\n        this.musicButton = null;\n        this.musicDisplay = null;\n    }\n\n    switchTrack(pauseStatus) {\n        const newMusic = pauseStatus === true ? menuMusic : gameMusic;\n        this.currentMusic.currentTime = 0;\n        if (this.playMusic === true) {\n            this.currentMusic.pause();\n            this.currentMusic = newMusic;\n            this.currentMusic.play();\n        } else {\n            this.currentMusic = newMusic;\n        }\n    }\n\n    setupSoundButton(addButton) {\n        addButton({ id: \"music\", event: this.toggleMusic, text: null });\n        addSoundIcon(this.musicButton);\n        this.musicButton = document.getElementById(\"music\");\n        this.musicDisplay = document.getElementById(\"music-icon\");\n        this.musicButton.addEventListener(\"click\", this.toggleMusic);\n    }\n\n    toggleMusic(e) {\n        e.preventDefault();\n        this.playMusic === true ? this.pauseMusic() : this.resumeMusic();\n    }\n\n    pauseMusic() {\n        this.playMusic = false;\n        this.musicDisplay.className = \"fas fa-volume-mute fa-2x\";\n        this.currentMusic.pause();\n    }\n\n    resumeMusic() {\n        this.playMusic = true;\n        this.musicDisplay.className = \"fas fa-volume-up fa-2x\";\n        this.currentMusic.play();\n    }\n}\n\nfunction addSoundIcon() {\n    const musicIcon = document.createElement(\"i\");\n    musicIcon.setAttribute(\"id\", \"music-icon\");\n    musicIcon.className = \"fas fa-volume-up fa-2x\";\n    const musicButton = document.getElementById(\"music\");\n    musicButton.appendChild(musicIcon);\n}\n\nfunction playBlockSound(block) {\n    block.height === block.width ?\n        squareSound.play() : rectangleSound.play();\n}\n\nfunction playFallSound() {\n    fallSound.play();\n}\n\nfunction playGoalSound() {\n    completeLevelSound.play();\n}\n\n// function playWarpSound() {\n//     warpSound.play();\n// }\n\n// function playBridgeSound(tile) {\n//     tile.active ?\n//         bridgeUpSound.play() : bridgeDownSound.play();\n// }\n\nmodule.exports = {\n    playBlockSound,\n    playFallSound,\n    playGoalSound,\n    GameMusic\n};\n","class Menu {\n    start(display, game, controls) {\n        display.drawMenu(game.boardSize);\n        const startParams = { id: \"start-button\", event: game.startGame, text: \"Start\" };\n        const controlsParams = { id: \"controls-button\", event: game.showControls, text: \"Controls\" };\n        // const tutorialParams = { id: \"tutorial-button\", event: game.startTutorial, text: Tutorial };\n        controls.addButton(startParams);\n        // controls.addButton(tutorialParams);\n        controls.addButton(controlsParams);\n    }\n\n    controlsMenu(display, game, controls) {\n        display.drawControls(game.boardSize);\n        const backParams = { id: \"back-button\", event: game.redrawMenu, text: \"Back\" };\n        controls.addButton(backParams);\n        controls.removeButton({ id: \"start-button\", event: game.startGame });\n        // controls.removeButton({ id: \"tutorial-button\", event: game.startTutorial });\n        controls.removeButton({ id: \"controls-button\", event: game.showControls });\n    }\n}\n\nmodule.exports = Menu;\n","const levelFour = {\n    floorDimensions: { xRange: 14, yRange: 10, },\n    floorData: [\n        { x: 0, y: 6, type: \"s\" },\n        { x: 13, y: 5, type: \"g\" },\n        { x: 1, y: 6, type: \"n\" },\n        { x: 2, y: 6, type: \"n\" },\n        { x: 3, y: 6, type: \"n\" },\n        { x: 4, y: 6, type: \"n\" },\n        { x: 4, y: 5, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n        { x: 5, y: 9, type: \"n\" },\n        { x: 5, y: 8, type: \"n\" },\n        { x: 5, y: 7, type: \"n\" },\n        { x: 5, y: 6, type: \"n\" },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 9, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 1, type: \"n\" },\n        { x: 7, y: 9, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 1, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 9, type: \"n\" },\n        { x: 8, y: 8, type: \"n\" },\n        { x: 8, y: 7, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 1, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" },\n        { x: 9, y: 9, type: \"n\" },\n        { x: 9, y: 8, type: \"n\" },\n        { x: 9, y: 7, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 2, type: \"n\" },\n        { x: 9, y: 1, type: \"n\" },\n        { x: 9, y: 0, type: \"n\" },\n        { x: 10, y: 9, type: \"n\" },\n        { x: 10, y: 8, type: \"n\" },\n        { x: 10, y: 7, type: \"n\" },\n        { x: 10, y: 3, type: \"n\" },\n        { x: 10, y: 2, type: \"n\" },\n        { x: 10, y: 1, type: \"n\" },\n        { x: 11, y: 7, type: \"n\" },\n        { x: 11, y: 6, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 12, y: 7, type: \"n\" },\n        { x: 12, y: 6, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 13, y: 6, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelFour;\n","const levelThree = {\n    floorDimensions: { xRange: 15, yRange: 6, },\n    floorData: [\n        { x: 1, y: 2, type: \"s\" },\n        { x: 13, y: 2, type: \"g\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 4, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 9, y: 5, type: \"n\" },\n        { x: 10, y: 5, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 4, type: \"n\" },\n        { x: 11, y: 3, type: \"n\" },\n        { x: 11, y: 2, type: \"n\" },\n        { x: 11, y: 1, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 12, y: 4, type: \"n\" },\n        { x: 12, y: 3, type: \"n\" },\n        { x: 12, y: 2, type: \"n\" },\n        { x: 12, y: 1, type: \"n\" },\n        { x: 12, y: 0, type: \"n\" },\n        { x: 13, y: 3, type: \"n\" },\n        { x: 13, y: 1, type: \"n\" },\n        { x: 13, y: 0, type: \"n\" },\n        { x: 14, y: 3, type: \"n\" },\n        { x: 14, y: 2, type: \"n\" },\n        { x: 14, y: 1, type: \"n\" },\n        { x: 14, y: 0, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelThree;\n","const levelTwo = {\n    floorDimensions: { xRange: 10, yRange: 6, },\n    floorData: [\n        { x: 1, y: 1, type: \"s\" },\n        { x: 7, y: 4, type: \"g\" },\n        { x: 0, y: 0, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 1, type: \"n\" },\n        { x: 5, y: 2, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelTwo;\n","const levelOne = {\n    floorDimensions: { xRange: 10, yRange: 1, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 9, y: 0, type: \"g\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 5, y: 0, type: \"n\" },\n        { x: 6, y: 0, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" }\n    ],\n};\n\nmodule.exports = levelOne;\n","const tutorial = {\n    floorDimensions: { xRange: 5, yRange: 5, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 2, y: 2, type: \"g\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = tutorial;\n","const tutorial = require(\"./tutorial\");\nconst levelOne = require(\"./level_one\");\nconst levelTwo = require(\"./level_two\");\nconst levelThree = require(\"./level_three\");\nconst levelFour = require(\"./level_four\");\n// const levelFive = require(\"./level_five\");\n// const levelSix = require(\"./level_six\");\n// const levelSeven = require(\"./level_seven\");\n// const levelEight = require(\"./level_eight\");\n// const levelNine = require(\"./level_nine\");\n\nmodule.exports = {\n    tutorial: tutorial,\n    1: levelOne,\n    2: levelTwo,\n    3: levelThree,\n    4: levelFour,\n    // 5: levelFive,\n    // 6: levelSix,\n    // 7: levelSeven,\n    // 8: levelEight,\n    // 9: levelNine,\n};\n\n// 6: levelSix,\n// 7: levelSeven,\n// 8: levelEight,\n// 9: levelNine,\n// 5: levelFive,\n","class Tile {\n    constructor(options) {\n        this.xPos = options.x;\n        this.yPos = options.y;\n        this.type = this.typeReference(options.type);\n        this.active = this.checkActiveStatus(options.active);\n    }\n\n    typeReference(type) {\n        switch(type) {\n        case \"n\":\n            return \"none\";\n        case \"s\":\n            return \"start\";\n        case \"g\":\n            return \"goal\";\n        case \"c\":\n            return \"collapsible\";\n        case \"w\":\n            return \"warp\";\n        case \"a\":\n            return \"activator\";\n        case \"b\":\n            return \"bridge\";\n        }\n    }\n\n    checkActiveStatus(status) {\n        return status === undefined ? true : status;\n    }\n\n    toggleActive() {\n        if (this.type === \"bridge\") {\n            this.active = !this.active;\n        }\n    }\n}\n\nmodule.exports = Tile;\n","const Tile = require(\"./tile\");\nconst allLevels = require(\"../levels/all_levels\");\n\nclass LevelGenerator {\n    constructor() {\n        this.currentLevel = 1;\n        this.levelData = allLevels;\n\n        this.constructTileCoordinates = this.constructTileCoordinates.bind(this);\n    }\n\n    nextLevel() {\n        this.currentLevel += 1;\n    }\n\n    resetCurrentLevel() {\n        this.currentLevel = 1;\n    }\n\n    constructFloor(length, boardSize) {\n        this.constructedFloor = this.generateLevel(length, boardSize);\n        this.currentStartPosition = this.getStart(this.constructedFloor);\n    }\n\n    getStart(floor) {\n        for (var position in floor) {\n            let tile = floor[position];\n            if (tile.type === \"start\") {\n                return { xPos: tile.xPos, yPos: tile.yPos };\n            }\n        }\n    }\n\n    generateLevel(length, boardSize) {\n        const level = this.levelData[this.currentLevel];\n        const startPosition = this.centerFloor(level.floorDimensions, length, boardSize);\n        return this.setCoordinates(level.floorData, startPosition, length);\n    }\n\n    // Tiles are positioned relative to the position of the top-left tile on a floor.\n    centerFloor(floorDimensions, length, boardSize) {\n        const {width, height } = boardSize;\n        const floorWidth = floorDimensions.xRange * length;\n        const floorHeight = floorDimensions.yRange * length;\n        const startCornerXPos = Math.floor((width - floorWidth) / 2);\n        const startCornerYPos = Math.floor((height - floorHeight) / 2);\n        return { xPos: startCornerXPos, yPos: startCornerYPos };\n    }\n\n    setCoordinates(floorData, startPosition, length) {\n        const newFloor = {};\n        floorData.forEach(tileData => {\n            let tileOptions = this.constructTileCoordinates(tileData, startPosition, length);\n            let tile = new Tile(tileOptions);\n            let tilePosition = `[${tile.xPos}, ${tile.yPos}]`;\n            newFloor[tilePosition] = tile;\n        });\n        return newFloor;\n    }\n\n    constructTileCoordinates(tileData, startPosition, length) {\n        const x = startPosition.xPos + length * tileData.x;\n        const y = startPosition.yPos + length * tileData.y;\n        return { x: x, y: y, type: tileData.type, active: tileData.active };\n    }\n\n    lookupTile(position) {\n        const currentPosition = `[${position.xPos}, ${position.yPos}]`;\n        return this.constructedFloor[currentPosition];\n    }\n}\n\nmodule.exports = LevelGenerator;\n","class GameClock {\n    constructor() {\n        this.gameTimeSeconds = 0;\n    }\n\n    resetClock() {\n        this.gameTimeSeconds = 0;\n    }\n\n    upTick() {\n        this.gameTimeSeconds += 1;\n    }\n\n    currentTime() {\n        const gameTime = this.gameTimeSeconds;\n        const seconds = gameTime % 60;\n        const minutes = Math.floor(gameTime / 60) % 60;\n        return { minutes, seconds };\n    }\n}\n\nmodule.exports = GameClock;\n","const GameClock = require(\"./clock\");\n\nconst colors = {\n    backgroundColor: \"rgb(25, 25, 25)\",\n    textColor: \"rgb(255, 255, 255)\",\n    blockColor: \"rgb(200, 0, 255)\",\n    blockFallingColor: \"rgb(255, 0, 0)\",\n    tileColors: {\n        start: \"rgb(0, 255, 255)\",\n        goal: \"rgb(0, 255, 0)\",\n        none: \"rgb(192, 192, 192)\",\n        collapsible: \"rgb(255, 128, 0)\",\n        warp: \"rgb(255, 255, 0)\",\n        activator: \"#FFF\",\n        bridge: \"rgb(128, 0, 0)\",\n    }\n};\n\nconst fonts = {\n    mediumFontSize: \"30px Russo One, sans-serif\",\n    largeFontSize: \"50px Russo One, sans-serif\",\n};\n\n// function resizeCanvas() {\n//     canvas.width = window.innerWidth;\n//     canvas.height = window.innerHeight;\n//     ctx.fillStyle = \"red\";\n//     ctx.fillRect(0,0, l1.length, l2.length);\n//     ctx.fillStyle = \" blue\";\n//     ctx.fillText(\"Hi\", canvas.width / 2, canvas.height / 2);\n// }\n// window.addEventListener(\"resize\", resizeCanvas);\n\nconst clock = new GameClock();\n\nclass Display {\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.drawTime = this.drawTime.bind(this);\n    }\n\n    drawStart(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Click anywhere\", width / 2 - 200, height / 2);\n        this.ctx.fillText(\"to begin\", width / 2 - 125, height / 2 + 50);\n    }\n\n    render(options) {\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height - 100);\n        this.ctx.fillRect(0, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(`Level ${options.levelNumber}`, 100, 100);\n        this.ctx.fillText(`Moves: ${options.moves}`, width - 200, 100);\n        this.ctx.fillText(`Falls: ${options.falls}`, 100, height - 50);\n        this.drawFloor(options.level, options.length);\n    }\n\n    drawFloor(floor, length) {\n        for (var position in floor) {\n            let tile = floor[position];\n            this.ctx.fillStyle = colors.tileColors[tile.type];\n            const { xPos, yPos } = tile;\n            this.ctx.fillRect(xPos, yPos, length, length);\n            this.ctx.strokeRect(xPos, yPos, length, length);\n        }\n    }\n\n    drawMenu(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Blockhead\", width / 2 - 125, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"a game by Michael Johnson\", width / 2 - 200, height / 3);\n    }\n\n    drawControls(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0,0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Controls:\", width / 2 - 100, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"Up: up-arrow\", width / 2 - 100, height * 3 / 8);\n        this.ctx.fillText(\"Down: down-arrow\", width / 2 - 100, height / 2);\n        this.ctx.fillText(\"Left: left-arrow\", width / 2 - 100, height * 5 / 8);\n        this.ctx.fillText(\"Right: right-arrow\", width / 2 - 100, height * 3 / 4);\n    }\n\n    stringifyTime() {\n        const { minutes, seconds } = clock.currentTime();\n\n        const minuteString = (minutes < 10) ? `0${minutes}` : minutes;\n        const secondString = (seconds < 10) ? `0${seconds}` : seconds;\n\n        return `${minuteString}:${secondString}`;\n    }\n\n    drawTime(boardSize) {\n        const { width, height } = boardSize;\n        const displayTime = this.stringifyTime();\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(width / 2, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(displayTime, width - 200, height - 50);\n        clock.upTick();\n    }\n\n    drawBlock(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n        this.ctx.strokeRect(xPos, yPos, width, height);\n    }\n\n    stringifyRGBData(colorData) {\n        return \"rgb(\".concat(colorData[0])\n            .concat(\", \")\n            .concat(colorData[1])\n            .concat(\", \")\n            .concat(colorData[2])\n            .concat(\")\");\n    }\n\n    tileMovesOffFloor(coordinates) {\n        for(let i = 0; i < coordinates.length; i++) {\n            let corner = coordinates[i];\n            let point = this.ctx.getImageData(corner[0], corner[1], 1, 1);\n            let colorData = point.data.slice(0, 3);\n            let color = this.stringifyRGBData(colorData);\n            if (color === colors.backgroundColor) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    drawPause(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Pause\", width / 2 - 100, height / 2);\n        this.ctx.font = fonts.mediumFontSize;\n    }\n\n    drawFail(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockFallingColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n    }\n\n    drawFinish(options) {\n        const timeTaken = this.stringifyTime();\n        clock.resetClock();\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Final Tally:\", width / 2 - 200, height / 5);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(`Moves: ${options.moves}`, width / 2 - 100, height * 3 / 10);\n        this.ctx.fillText(`Falls: ${options.falls}`, width / 2 - 100, height * 2 / 5);\n        this.ctx.fillText(`Time: ${timeTaken}`, width / 2 - 100, height / 2);\n        this.ctx.fillText(\"Click to start over\", width / 2 - 200, height * 3 / 5);\n    }\n}\n\nmodule.exports = Display;\n","function pause(game) {\n    game.pauseStatus = !game.pauseStatus;\n    game.pauseStatus === true ? pauseGame(game) : resumeGame(game);\n}\n\nfunction resumeGame(game) {\n    game.display.render(game.displayOptions());\n    game.display.drawBlock(game.block);\n    document.addEventListener(\"keydown\", game.move);\n    setMoveButtons(game);\n    game.timerId = setInterval(game.runClock, 1000);\n}\n\nfunction pauseGame(game) {\n    clearInterval(game.timerId);\n    setMoveButtons(game);\n    document.removeEventListener(\"keydown\", game.move);\n    game.display.drawPause(game.boardSize);\n}\n\nfunction getMove(e, block, length, move) {\n    e.preventDefault();\n    if (e.keyCode === 40 || move === \"down\") { // down arrow\n        block.transformBlock(0, 1 * length);\n    } else if (e.keyCode === 39 || move === \"right\") { // right arrow key\n        block.transformBlock(1 * length, 0);\n    } else if (e.keyCode === 38 || move === \"up\") { // up arrow key\n        block.transformBlock(0, -1 * length);\n    } else if (e.keyCode === 37 || move === \"left\") { // left arrow key\n        block.transformBlock(-1 * length, 0);\n    }\n}\n\nfunction restartGame(game, music) {\n    game.moves = 0;\n    game.falls = 0;\n    game.levels.resetCurrentLevel();\n    music.switchTrack(game.pauseStatus);\n    game.redrawMenu();\n    const board = document.getElementById(\"canvas-container\");\n    board.removeEventListener(\"click\", game.restart);\n}\n\nfunction setMoveButtons(game) {\n    const arrows = [\n        { text: \"\\u2190\", id: \"left\", event: game.left },\n        { text: \"\\u2191\", id: \"top\", event: game.up },\n        { text: \"\\u2192\", id: \"right\", event:game.right },\n        { text: \"\\u2193\", id: \"bottom\", event: game.down }\n    ];\n\n    if (game.pauseStatus === false) {\n        arrows.forEach(props => addButton(props));\n    } else {\n        arrows.forEach(props => removeButton(props));\n    }\n}\n\nfunction addButton({ id, text, event }) {\n    const container = document.getElementById(\"canvas-container\");\n    const button = document.createElement(\"button\");\n    button.setAttribute(\"id\", id);\n    button.innerText = text;\n    button.addEventListener(\"click\", event);\n    container.appendChild(button);\n}\n\nfunction removeButton({ id, event }) {\n    const button = document.getElementById(id);\n    button.removeEventListener(\"click\", event);\n    button.parentNode.removeChild(button);\n}\n\nmodule.exports = { pause,\n    restartGame,\n    getMove,\n    setMoveButtons,\n    addButton,\n    removeButton,\n};\n","class Block {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.xPos = undefined;\n        this.yPos = undefined;\n    }\n\n    setPosition(coordinates) {\n        this.xPos = coordinates.xPos;\n        this.yPos = coordinates.yPos;\n    }\n\n    resetBlock(length, startPosition) {\n        this.width = length;\n        this.height = length;\n        this.xPos = startPosition.xPos;\n        this.yPos = startPosition.yPos;\n    }\n\n    changePosition(dx, dy) {\n        this.xPos += dx;\n        this.yPos += dy;\n    }\n\n    transformBlock(x, y) {\n        this.width === this.height ?\n            this.expand(x, y) : this.checkDimensionsAndMovement(x, y);\n    }\n\n    expand(x, y) {\n        x !== 0 ? this.expandWidth(x, y) : this.expandHeight(x, y);\n    }\n\n    // To simulate a rectangular prism, the block's dimensions and\n    // position must change differently depending on its current size and\n    // the direction it moves.\n    checkDimensionsAndMovement(x, y) {\n        if (this.width > this.height && x !== 0) {\n            this.contractWidth(x, y);\n        } else if (this.width < this.height && y !== 0) {\n            this.contractHeight(x, y);\n        } else {\n            this.changePosition(x, y);\n        }\n    }\n\n    expandWidth(x, y) {\n        this.width *= 2;\n        x > 0 ? this.changePosition(x, y) : this.changePosition(2 * x, y);\n    }\n\n    expandHeight(x, y) {\n        this.height *= 2;\n        y > 0 ? this.changePosition(x, y) : this.changePosition(x, 2 * y);\n    }\n\n    contractWidth(x, y) {\n        this.width /= 2;\n        x > 0 ? this.changePosition(2 * x, y) : this.changePosition(x, y);\n    }\n\n    contractHeight(x, y) {\n        this.height /= 2;\n        y > 0 ? this.changePosition(x, y * 2) : this.changePosition(x, y);\n    }\n}\n\nmodule.exports = Block;\n","const Block = require(\"./game_objects/block\");\nconst controls = require(\"./game_objects/controls\");\nconst Display = require(\"./game_objects/display\");\nconst LevelGenerator = require(\"./game_objects/level_generator\");\nconst Menu = require(\"./game_objects/menu\");\nconst sound = require(\"./game_objects/sound\");\n\nconst GameMusic = new sound.GameMusic();\n\nclass Game {\n    constructor(ctx, length, boardSize) {\n        this.boardSize = boardSize;\n        this.length = length;\n        this.pauseStatus = true;\n        this.moves = 0;\n        this.falls = 0;\n\n        this.display = new Display(ctx);\n        this.levels = new LevelGenerator();\n        this.block = new Block(length, length);\n        this.menu = new Menu();\n\n        this.move = this.move.bind(this);\n        this.pause = this.pause.bind(this);\n        this.restart = this.restart.bind(this);\n        this.startMenu = this.startMenu.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.showControls = this.showControls.bind(this);\n        this.redrawMenu = this.redrawMenu.bind(this);\n        this.runClock = this.runClock.bind(this);\n        this.up = this.up.bind(this);\n        this.right = this.right.bind(this);\n        this.left = this.left.bind(this);\n        this.down = this.down.bind(this);\n    }\n\n    start() {\n        this.display.drawStart(this.boardSize);\n        const board = document.getElementById(\"canvas-container\");\n        board.addEventListener(\"click\", this.startMenu);\n    }\n\n    startGame(e) {\n        e.preventDefault();\n        this.pauseStatus = false;\n        controls.removeButton({ id: \"start-button\", event: this.startGame });\n        // controls.removeButton({ id: \"tutorial-button\", event: this.startTutorial });\n        controls.removeButton({ id: \"controls-button\", event: this.showControls });\n        controls.setMoveButtons(this);\n        controls.addButton({id: \"pause-button\", event: this.pause, text: \"Pause\" });\n        GameMusic.switchTrack(this.pauseStatus);\n        this.levels.constructFloor(this.length, this.boardSize);\n        this.block.setPosition(this.levels.currentStartPosition);\n        this.timerId = setInterval(this.runClock, 1000);\n        document.addEventListener(\"keydown\", this.move);\n        this.display.render(this.displayOptions());\n        this.display.drawBlock(this.block);\n    }\n\n    // startTutorial(e) {\n    //     e.preventDefault();\n    //     controls.removeButton({ id: \"start-button\", event: this.startGame });\n    //     controls.removeButton({ id: \"tutorial-button\", event: this.startTutorial });\n    //     controls.removeButton({ id: \"controls-button\", event: this.showControls });\n    // }\n\n    startMenu(e) {\n        e.preventDefault();\n        this.menu.start(this.display, this, controls);\n        GameMusic.setupSoundButton(controls.addButton);\n        GameMusic.switchTrack(this.pauseStatus);\n        const board = document.getElementById(\"canvas-container\");\n        board.removeEventListener(\"click\", this.startMenu);\n    }\n\n    redrawMenu() {\n        const backButton = document.getElementById(\"back-button\");\n        if (backButton !== null) {\n            backButton.removeEventListener(\"click\", this.reDrawMenu);\n            backButton.parentNode.removeChild(backButton);\n        }\n        this.menu.start(this.display, this, controls);\n    }\n\n    showControls(e) {\n        e.preventDefault();\n        this.menu.controlsMenu(this.display, this, controls);\n    }\n\n    runClock() {\n        this.display.drawTime(this.boardSize);\n    }\n\n    restart(e) {\n        e.preventDefault();\n        controls.restartGame(this, GameMusic);\n    }\n\n    move(e) {\n        const arrowKeycodes = [37, 38, 39, 40];\n        if (arrowKeycodes.includes(e.keyCode)) {\n            controls.getMove(e, this.block, this.length, null);\n            this.moves += 1;\n            this.checkBlock();\n        }\n    }\n\n    up(e) {\n        controls.getMove(e, this.block, this.length, \"up\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    right(e) {\n        controls.getMove(e, this.block, this.length, \"right\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    down(e) {\n        controls.getMove(e, this.block, this.length, \"down\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    left(e) {\n        controls.getMove(e, this.block, this.length, \"left\");\n        this.moves += 1;\n        this.checkBlock();\n    }\n\n    pause(e) {\n        e.preventDefault();\n        controls.pause(this);\n    }\n\n    displayOptions() {\n        return {\n            level: this.levels.constructedFloor,\n            levelNumber: this.levels.currentLevel,\n            moves: this.moves,\n            falls: this.falls,\n            length: this.length,\n            boardSize: this.boardSize,\n        };\n    }\n\n    checkBlock() {\n        if (this.block.width === this.block.height) {\n            this.checkGoal();\n        }\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] !== undefined) {\n            this.checkBounds();\n        }\n    }\n\n    checkGoal() {\n        const { xPos, yPos } = this.block;\n        const tile = this.levels.lookupTile({ xPos, yPos });\n        if (tile !== undefined && tile.type === \"goal\") {\n            this.nextLevel();\n        }\n    }\n\n    nextLevel() {\n        sound.playGoalSound();\n        this.levels.nextLevel();\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] === undefined) {\n            this.endGame();\n        } else {\n            this.levels.constructFloor(this.length, this.boardSize);\n            this.block.setPosition(this.levels.currentStartPosition);\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n        }\n    }\n\n    endGame() {\n        this.pauseStatus = true;\n        document.removeEventListener(\"keydown\", this.move);\n        controls.removeButton({ id: \"pause-button\", event: this.pause });\n        controls.setMoveButtons(this);\n        clearInterval(this.timerId);\n        this.display.drawFinish(this.displayOptions());\n        setTimeout(() => {\n            const board = document.getElementById(\"canvas-container\");\n            board.addEventListener(\"click\", this.restart);\n        }, 500);\n    }\n\n    checkBounds() {\n        const { currentLevel, levelData } = this.levels;\n        const coordinates = this.getCoordinates();\n        if (this.display.tileMovesOffFloor(coordinates)) {\n            this.resetLevel();\n        } else if (levelData[currentLevel] !== undefined) {\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n            sound.playBlockSound(this.block);\n        }\n    }\n\n    // gets current position of block. Coordinates are set to avoid bugs related\n    // to narrow gaps.\n    getCoordinates() {\n        const { xPos, yPos, width, height } = this.block;\n        return [\n            [xPos + Math.floor(width / 4), yPos + Math.floor(height / 4)],\n            [xPos + Math.floor(width * 3 / 4), yPos + Math.floor(height * 3 / 4)],\n        ];\n    }\n\n    resetLevel() {\n        this.pauseStatus = true;\n        document.removeEventListener(\"keydown\", this.move);\n        controls.setMoveButtons(this);\n        this.falls += 1;\n        this.flashFailure();\n    }\n\n    flashFailure() {\n        this.display.render(this.displayOptions());\n        this.display.drawFail(this.block);\n        sound.playFallSound();\n        this.block.resetBlock(this.length, this.levels.currentStartPosition);\n        setTimeout(() => {\n            this.pauseStatus = false;\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n            document.addEventListener(\"keydown\", this.move);\n            controls.setMoveButtons(this);\n        }, 800);\n    }\n}\n\nmodule.exports = Game;\n","const Game = require(\"./game\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const blockheadBoard = document.getElementById(\"blockhead\");\n    const blockheadBoardContainer = document.getElementById(\"canvas-container\");\n    const ctx = blockheadBoard.getContext(\"2d\");\n\n    const boardSize = {\n        width: blockheadBoardContainer.offsetWidth,\n        height: blockheadBoardContainer.offsetHeight,\n    };\n    blockheadBoard.width = boardSize.width;\n    blockheadBoard.height = boardSize.height;\n\n    new Game(ctx, 30, boardSize).start();\n});"],"sourceRoot":""}