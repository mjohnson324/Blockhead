{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/JavaScript/game_objects/sound.js","webpack:///./assets/JavaScript/game_objects/menu.js","webpack:///./assets/JavaScript/levels/level_four.js","webpack:///./assets/JavaScript/levels/level_three.js","webpack:///./assets/JavaScript/levels/level_two.js","webpack:///./assets/JavaScript/levels/level_one.js","webpack:///./assets/JavaScript/levels/tutorial.js","webpack:///./assets/JavaScript/levels/all_levels.js","webpack:///./assets/JavaScript/game_objects/tile.js","webpack:///./assets/JavaScript/game_objects/level_generator.js","webpack:///./assets/JavaScript/game_objects/clock.js","webpack:///./assets/JavaScript/game_objects/display.js","webpack:///./assets/JavaScript/game_objects/controls.js","webpack:///./assets/JavaScript/game_objects/block.js","webpack:///./assets/JavaScript/game.js","webpack:///./assets/JavaScript/blockhead.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rectangleSound","document","getElementById","squareSound","fallSound","completeLevelSound","gameMusic","menuMusic","loop","playBlockSound","block","height","width","play","playFallSound","playGoalSound","GameMusic","[object Object]","this","playMusic","currentMusic","musicButton","musicDisplay","toggleMusic","addEventListener","pause","e","preventDefault","pauseMusic","resumeMusic","className","addMenuButton","removeMenuButton","display","game","boardSize","drawMenu","startGame","showControls","elementId","eventResult","container","button","createElement","word","split","capitalizedWord","charAt","toUpperCase","slice","setAttribute","innerText","appendChild","removeEventListener","parentNode","removeChild","drawControls","redrawMenu","floorDimensions","xRange","yRange","floorData","x","y","type","tutorial","levelOne","levelTwo","levelThree","levelFour","1","2","3","4","options","xPos","yPos","typeReference","active","checkActiveStatus","status","undefined","Tile","allLevels","currentLevel","levelData","constructTileCoordinates","length","constructedFloor","generateLevel","currentStartPosition","getStart","floor","position","tile","level","startPosition","centerFloor","setCoordinates","floorWidth","floorHeight","Math","newFloor","forEach","tileData","tileOptions","tilePosition","currentPosition","gameTimeSeconds","gameTime","seconds","minutes","colors","backgroundColor","textColor","blockColor","blockFallingColor","tileColors","start","goal","none","collapsible","warp","activator","bridge","fonts","mediumFontSize","largeFontSize","clock","ctx","drawTime","fillStyle","font","fillRect","fillText","levelNumber","moves","falls","drawFloor","strokeRect","currentTime","displayTime","stringifyTime","upTick","colorData","concat","coordinates","corner","getImageData","data","stringifyRGBData","timeTaken","resetClock","pauseStatus","clearInterval","timerId","move","drawPause","pauseGame","render","displayOptions","drawBlock","setInterval","runClock","resumeGame","restartGame","music","keyCode","levels","resetCurrentLevel","startMenu","restart","getMove","transformBlock","dx","dy","expand","checkDimensionsAndMovement","expandWidth","expandHeight","contractWidth","contractHeight","changePosition","Block","controls","Display","LevelGenerator","Menu","sound","menu","drawStart","constructFloor","setPosition","backButton","reDrawMenu","controlsMenu","includes","checkBlock","checkGoal","checkBounds","lookupTile","nextLevel","endGame","drawFinish","getCoordinates","tileMovesOffFloor","resetLevel","flashFailure","drawFail","resetBlock","setTimeout","Game","blockheadBoard","blockheadBoardContainer","getContext","offsetWidth","offsetHeight"],"mappings":"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AAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,sB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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const rectangleSound = document.getElementById(\"block-rectangle\");\nconst squareSound = document.getElementById(\"block-square\");\n// const bridgeUpSound = document.getElementById(\"bridge-up\");\n// const bridgeDownSound = document.getElementById(\"bridge-down\");\nconst fallSound = document.getElementById(\"fall\");\nconst completeLevelSound = document.getElementById(\"complete-level\");\n// const warpSound = document.getElementById(\"warp\");\nconst gameMusic = document.getElementById(\"game-song\");\nconst menuMusic = document.getElementById(\"menu-song\");\n\nmenuMusic.loop = true;\ngameMusic.loop = true;\n\nclass GameMusic {\n    constructor() {\n        this.playMusic = true;\n        this.currentMusic = menuMusic;\n        this.musicButton = document.getElementById(\"music\");\n        this.musicDisplay = document.getElementById(\"music-icon\");\n\n        this.toggleMusic = this.toggleMusic.bind(this);\n\n        this.musicButton = document.getElementById(\"music\");\n        this.musicButton.addEventListener(\"click\", this.toggleMusic);\n    }\n\n    startGame() {\n        if (this.playMusic === true) {\n            this.currentMusic.pause();\n            this.currentMusic = gameMusic;\n            this.currentMusic.play();\n        } else {\n            this.currentMusic = gameMusic;\n        }\n    }\n\n    startMenu() {\n        if (this.playMusic === true) {\n            this.currentMusic.pause();\n            this.currentMusic = menuMusic;\n            this.currentMusic.play();\n        } else {\n            this.currentMusic = menuMusic;\n        }\n    }\n\n    toggleMusic(e) {\n        e.preventDefault();\n        this.playMusic === true ? this.pauseMusic() : this.resumeMusic();\n    }\n\n    pauseMusic() {\n        this.playMusic = false;\n        this.musicDisplay.className = \"fas fa-volume-mute fa-2x\";\n        this.currentMusic.pause();\n    }\n\n    resumeMusic() {\n        this.playMusic = true;\n        this.musicDisplay.className = \"fas fa-volume-up fa-2x\";\n        this.currentMusic.play();\n    }\n}\n\nfunction playBlockSound(block) {\n    block.height === block.width ?\n        squareSound.play() : rectangleSound.play();\n}\n\nfunction playFallSound() {\n    fallSound.play();\n}\n\nfunction playGoalSound() {\n    completeLevelSound.play();\n}\n\n// function playWarpSound() {\n//     warpSound.play();\n// }\n\n// function playBridgeSound(tile) {\n//     tile.active ?\n//         bridgeUpSound.play() : bridgeDownSound.play();\n// }\n\nmodule.exports = {\n    playBlockSound,\n    playFallSound,\n    playGoalSound,\n    GameMusic\n};\n","class Menu {\n    constructor() {\n        this.addMenuButton = this.addMenuButton.bind(this);\n        this.removeMenuButton = this.removeMenuButton.bind(this);\n    }\n\n    start(display, game, boardSize) {\n        display.drawMenu(boardSize);\n        this.addMenuButton(\"start-button\", game.startGame);\n        // this.addMenuButton(\"tutorial-button\", game.startTutorial);\n        this.addMenuButton(\"controls-button\", game.showControls);\n    }\n\n    addMenuButton(elementId, eventResult) {\n        const container = document.getElementById(\"canvas-container\");\n        const button = document.createElement(\"button\");\n        const word = elementId.split(\"-\")[0];\n        const capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);\n        button.setAttribute(\"id\", elementId);\n        button.innerText = capitalizedWord;\n        button.addEventListener(\"click\", eventResult);\n        container.appendChild(button);\n    }\n\n    removeMenuButton(elementId, eventResult) {\n        const button = document.getElementById(elementId);\n        button.removeEventListener(\"click\", eventResult);\n        button.parentNode.removeChild(button);\n    }\n\n    controlsMenu(display, game, boardSize) {\n        display.drawControls(boardSize);\n        this.addMenuButton(\"back-button\", game.redrawMenu);\n        this.removeMenuButton(\"start-button\", game.startGame);\n        // this.removeMenuButton(\"tutorial-button\", game.startTutorial);\n        this.removeMenuButton(\"controls-button\", game.showControls);\n    }\n}\n\nmodule.exports = Menu;\n","const levelFour = {\n    floorDimensions: { xRange: 14, yRange: 10, },\n    floorData: [\n        { x: 0, y: 6, type: \"s\" },\n        { x: 13, y: 5, type: \"g\" },\n        { x: 1, y: 6, type: \"n\" },\n        { x: 2, y: 6, type: \"n\" },\n        { x: 3, y: 6, type: \"n\" },\n        { x: 4, y: 6, type: \"n\" },\n        { x: 4, y: 5, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n        { x: 5, y: 9, type: \"n\" },\n        { x: 5, y: 8, type: \"n\" },\n        { x: 5, y: 7, type: \"n\" },\n        { x: 5, y: 6, type: \"n\" },\n        { x: 5, y: 5, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 9, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 1, type: \"n\" },\n        { x: 7, y: 9, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 1, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 9, type: \"n\" },\n        { x: 8, y: 8, type: \"n\" },\n        { x: 8, y: 7, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 1, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" },\n        { x: 9, y: 9, type: \"n\" },\n        { x: 9, y: 8, type: \"n\" },\n        { x: 9, y: 7, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 2, type: \"n\" },\n        { x: 9, y: 1, type: \"n\" },\n        { x: 9, y: 0, type: \"n\" },\n        { x: 10, y: 9, type: \"n\" },\n        { x: 10, y: 8, type: \"n\" },\n        { x: 10, y: 7, type: \"n\" },\n        { x: 10, y: 3, type: \"n\" },\n        { x: 10, y: 2, type: \"n\" },\n        { x: 10, y: 1, type: \"n\" },\n        { x: 11, y: 7, type: \"n\" },\n        { x: 11, y: 6, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 12, y: 7, type: \"n\" },\n        { x: 12, y: 6, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 13, y: 6, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelFour;\n","const levelThree = {\n    floorDimensions: { xRange: 15, yRange: 6, },\n    floorData: [\n        { x: 1, y: 2, type: \"s\" },\n        { x: 13, y: 2, type: \"g\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 7, y: 4, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 9, y: 5, type: \"n\" },\n        { x: 10, y: 5, type: \"n\" },\n        { x: 11, y: 5, type: \"n\" },\n        { x: 11, y: 4, type: \"n\" },\n        { x: 11, y: 3, type: \"n\" },\n        { x: 11, y: 2, type: \"n\" },\n        { x: 11, y: 1, type: \"n\" },\n        { x: 12, y: 5, type: \"n\" },\n        { x: 12, y: 4, type: \"n\" },\n        { x: 12, y: 3, type: \"n\" },\n        { x: 12, y: 2, type: \"n\" },\n        { x: 12, y: 1, type: \"n\" },\n        { x: 12, y: 0, type: \"n\" },\n        { x: 13, y: 3, type: \"n\" },\n        { x: 13, y: 1, type: \"n\" },\n        { x: 13, y: 0, type: \"n\" },\n        { x: 14, y: 3, type: \"n\" },\n        { x: 14, y: 2, type: \"n\" },\n        { x: 14, y: 1, type: \"n\" },\n        { x: 14, y: 0, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelThree;\n","const levelTwo = {\n    floorDimensions: { xRange: 10, yRange: 6, },\n    floorData: [\n        { x: 1, y: 1, type: \"s\" },\n        { x: 7, y: 4, type: \"g\" },\n        { x: 0, y: 0, type: \"n\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 2, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 5, y: 1, type: \"n\" },\n        { x: 5, y: 2, type: \"n\" },\n        { x: 5, y: 3, type: \"n\" },\n        { x: 5, y: 4, type: \"n\" },\n        { x: 6, y: 2, type: \"n\" },\n        { x: 6, y: 3, type: \"n\" },\n        { x: 6, y: 4, type: \"n\" },\n        { x: 6, y: 5, type: \"n\" },\n        { x: 7, y: 2, type: \"n\" },\n        { x: 7, y: 3, type: \"n\" },\n        { x: 7, y: 5, type: \"n\" },\n        { x: 8, y: 2, type: \"n\" },\n        { x: 8, y: 3, type: \"n\" },\n        { x: 8, y: 4, type: \"n\" },\n        { x: 8, y: 5, type: \"n\" },\n        { x: 9, y: 3, type: \"n\" },\n        { x: 9, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = levelTwo;\n","const levelOne = {\n    floorDimensions: { xRange: 10, yRange: 1, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 9, y: 0, type: \"g\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 5, y: 0, type: \"n\" },\n        { x: 6, y: 0, type: \"n\" },\n        { x: 7, y: 0, type: \"n\" },\n        { x: 8, y: 0, type: \"n\" }\n    ],\n};\n\nmodule.exports = levelOne;\n","const tutorial = {\n    floorDimensions: { xRange: 5, yRange: 5, },\n    floorData: [\n        { x: 0, y: 0, type: \"s\" },\n        { x: 2, y: 2, type: \"g\" },\n        { x: 0, y: 1, type: \"n\" },\n        { x: 0, y: 2, type: \"n\" },\n        { x: 0, y: 3, type: \"n\" },\n        { x: 0, y: 4, type: \"n\" },\n        { x: 1, y: 0, type: \"n\" },\n        { x: 1, y: 1, type: \"n\" },\n        { x: 1, y: 2, type: \"n\" },\n        { x: 1, y: 3, type: \"n\" },\n        { x: 1, y: 4, type: \"n\" },\n        { x: 2, y: 0, type: \"n\" },\n        { x: 2, y: 1, type: \"n\" },\n        { x: 2, y: 3, type: \"n\" },\n        { x: 2, y: 4, type: \"n\" },\n        { x: 3, y: 0, type: \"n\" },\n        { x: 3, y: 1, type: \"n\" },\n        { x: 3, y: 2, type: \"n\" },\n        { x: 3, y: 3, type: \"n\" },\n        { x: 3, y: 4, type: \"n\" },\n        { x: 4, y: 0, type: \"n\" },\n        { x: 4, y: 1, type: \"n\" },\n        { x: 4, y: 2, type: \"n\" },\n        { x: 4, y: 3, type: \"n\" },\n        { x: 4, y: 4, type: \"n\" },\n    ],\n};\n\nmodule.exports = tutorial;\n","const tutorial = require(\"./tutorial\");\nconst levelOne = require(\"./level_one\");\nconst levelTwo = require(\"./level_two\");\nconst levelThree = require(\"./level_three\");\nconst levelFour = require(\"./level_four\");\n// const levelFive = require(\"./level_five\");\n// const levelSix = require(\"./level_six\");\n// const levelSeven = require(\"./level_seven\");\n// const levelEight = require(\"./level_eight\");\n// const levelNine = require(\"./level_nine\");\n\nmodule.exports = {\n    tutorial: tutorial,\n    1: levelOne,\n    2: levelTwo,\n    3: levelThree,\n    4: levelFour,\n    // 5: levelFive,\n    // 6: levelSix,\n    // 7: levelSeven,\n    // 8: levelEight,\n    // 9: levelNine,\n};\n\n// 6: levelSix,\n// 7: levelSeven,\n// 8: levelEight,\n// 9: levelNine,\n// 5: levelFive,\n","class Tile {\n    constructor(options) {\n        this.xPos = options.x;\n        this.yPos = options.y;\n        this.type = this.typeReference(options.type);\n        this.active = this.checkActiveStatus(options.active);\n    }\n\n    typeReference(type) {\n        switch(type) {\n        case \"n\":\n            return \"none\";\n        case \"s\":\n            return \"start\";\n        case \"g\":\n            return \"goal\";\n        case \"c\":\n            return \"collapsible\";\n        case \"w\":\n            return \"warp\";\n        case \"a\":\n            return \"activator\";\n        case \"b\":\n            return \"bridge\";\n        }\n    }\n\n    checkActiveStatus(status) {\n        return status === undefined ? true : status;\n    }\n\n    toggleActive() {\n        if (this.type === \"bridge\") {\n            this.active = !this.active;\n        }\n    }\n}\n\nmodule.exports = Tile;\n","const Tile = require(\"./tile\");\nconst allLevels = require(\"../levels/all_levels\");\n\nclass LevelGenerator {\n    constructor() {\n        this.currentLevel = 1;\n        this.levelData = allLevels;\n\n        this.constructTileCoordinates = this.constructTileCoordinates.bind(this);\n    }\n\n    nextLevel() {\n        this.currentLevel += 1;\n    }\n\n    resetCurrentLevel() {\n        this.currentLevel = 1;\n    }\n\n    constructFloor(length, boardSize) {\n        this.constructedFloor = this.generateLevel(length, boardSize);\n        this.currentStartPosition = this.getStart(this.constructedFloor);\n    }\n\n    getStart(floor) {\n        for (var position in floor) {\n            let tile = floor[position];\n            if (tile.type === \"start\") {\n                return { xPos: tile.xPos, yPos: tile.yPos };\n            }\n        }\n    }\n\n    generateLevel(length, boardSize) {\n        const level = this.levelData[this.currentLevel];\n        const startPosition = this.centerFloor(level.floorDimensions, length, boardSize);\n        return this.setCoordinates(level.floorData, startPosition, length);\n    }\n\n    // Tiles are positioned relative to the position of the top-left tile on a floor.\n    centerFloor(floorDimensions, length, boardSize) {\n        const {width, height } = boardSize;\n        const floorWidth = floorDimensions.xRange * length;\n        const floorHeight = floorDimensions.yRange * length;\n        const startCornerXPos = Math.floor((width - floorWidth) / 2);\n        const startCornerYPos = Math.floor((height - floorHeight) / 2);\n        return { xPos: startCornerXPos, yPos: startCornerYPos };\n    }\n\n    setCoordinates(floorData, startPosition, length) {\n        const newFloor = {};\n        floorData.forEach(tileData => {\n            let tileOptions = this.constructTileCoordinates(tileData, startPosition, length);\n            let tile = new Tile(tileOptions);\n            let tilePosition = `[${tile.xPos}, ${tile.yPos}]`;\n            newFloor[tilePosition] = tile;\n        });\n        return newFloor;\n    }\n\n    constructTileCoordinates(tileData, startPosition, length) {\n        const x = startPosition.xPos + length * tileData.x;\n        const y = startPosition.yPos + length * tileData.y;\n        return { x: x, y: y, type: tileData.type, active: tileData.active };\n    }\n\n    lookupTile(position) {\n        const currentPosition = `[${position.xPos}, ${position.yPos}]`;\n        return this.constructedFloor[currentPosition];\n    }\n}\n\nmodule.exports = LevelGenerator;\n","class GameClock {\n    constructor() {\n        this.gameTimeSeconds = 0;\n    }\n\n    resetClock() {\n        this.gameTimeSeconds = 0;\n    }\n\n    upTick() {\n        this.gameTimeSeconds += 1;\n    }\n\n    currentTime() {\n        const gameTime = this.gameTimeSeconds;\n        const seconds = gameTime % 60;\n        const minutes = Math.floor(gameTime / 60) % 60;\n        return { minutes, seconds };\n    }\n}\n\nmodule.exports = GameClock;\n","const GameClock = require(\"./clock\");\n\nconst colors = {\n    backgroundColor: \"rgb(25, 25, 25)\",\n    textColor: \"rgb(255, 255, 255)\",\n    blockColor: \"rgb(200, 0, 255)\",\n    blockFallingColor: \"rgb(255, 0, 0)\",\n    tileColors: {\n        start: \"rgb(0, 255, 255)\",\n        goal: \"rgb(0, 255, 0)\",\n        none: \"rgb(192, 192, 192)\",\n        collapsible: \"rgb(255, 128, 0)\",\n        warp: \"rgb(255, 255, 0)\",\n        activator: \"#FFF\",\n        bridge: \"rgb(128, 0, 0)\",\n    }\n};\n\nconst fonts = {\n    mediumFontSize: \"30px Russo One, sans-serif\",\n    largeFontSize: \"50px Russo One, sans-serif\",\n};\n\n// function resizeCanvas() {\n//     canvas.width = window.innerWidth;\n//     canvas.height = window.innerHeight;\n//     ctx.fillStyle = \"red\";\n//     ctx.fillRect(0,0, l1.length, l2.length);\n//     ctx.fillStyle = \" blue\";\n//     ctx.fillText(\"Hi\", canvas.width / 2, canvas.height / 2);\n// }\n// window.addEventListener(\"resize\", resizeCanvas);\n\nconst clock = new GameClock();\n\nclass Display {\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.drawTime = this.drawTime.bind(this);\n    }\n\n    drawStart(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Click anywhere\", width / 2 - 200, height / 2);\n        this.ctx.fillText(\"to begin\", width / 2 - 125, height / 2 + 50);\n    }\n\n    render(options) {\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height - 100);\n        this.ctx.fillRect(0, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(`Level ${options.levelNumber}`, 100, 100);\n        this.ctx.fillText(`Moves: ${options.moves}`, width - 200, 100);\n        this.ctx.fillText(`Falls: ${options.falls}`, 100, height - 50);\n        this.drawFloor(options.level, options.length);\n    }\n\n    drawFloor(floor, length) {\n        for (var position in floor) {\n            let tile = floor[position];\n            this.ctx.fillStyle = colors.tileColors[tile.type];\n            const { xPos, yPos } = tile;\n            this.ctx.fillRect(xPos, yPos, length, length);\n            this.ctx.strokeRect(xPos, yPos, length, length);\n        }\n    }\n\n    drawMenu(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Blockhead:\", width / 2 - 125, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"a game by Michael Johnson\", width / 2 - 200, height / 3);\n    }\n\n    drawControls(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0,0, width, height);\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Controls:\", width / 2 - 100, height / 4);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(\"Up: up-arrow\", width / 2 - 100, height * 3 / 8);\n        this.ctx.fillText(\"Down: down-arrow\", width / 2 - 100, height / 2);\n        this.ctx.fillText(\"Left: left-arrow\", width / 2 - 100, height * 5 / 8);\n        this.ctx.fillText(\"Right: right-arrow\", width / 2 - 100, height * 3 / 4);\n        this.ctx.fillText(\"Pause: enter\", width / 2 - 100, height * 7 / 8);\n    }\n\n    stringifyTime() {\n        const { minutes, seconds } = clock.currentTime();\n\n        const minuteString = (minutes < 10) ? `0${minutes}` : minutes;\n        const secondString = (seconds < 10) ? `0${seconds}` : seconds;\n\n        return `${minuteString}:${secondString}`;\n    }\n\n    drawTime(boardSize) {\n        const { width, height } = boardSize;\n        const displayTime = this.stringifyTime();\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(width / 2, height - 100, width / 2, 100);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(displayTime, width - 200, height - 50);\n        clock.upTick();\n    }\n\n    drawBlock(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n        this.ctx.strokeRect(xPos, yPos, width, height);\n    }\n\n    stringifyRGBData(colorData) {\n        return \"rgb(\".concat(colorData[0])\n            .concat(\", \")\n            .concat(colorData[1])\n            .concat(\", \")\n            .concat(colorData[2])\n            .concat(\")\");\n    }\n\n    tileMovesOffFloor(coordinates) {\n        for(let i = 0; i < coordinates.length; i++) {\n            let corner = coordinates[i];\n            let point = this.ctx.getImageData(corner[0], corner[1], 1, 1);\n            let colorData = point.data.slice(0, 3);\n            let color = this.stringifyRGBData(colorData);\n            if (color === colors.backgroundColor) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    drawPause(boardSize) {\n        const { width, height } = boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Pause\", width / 2 - 100, height / 2);\n        this.ctx.font = fonts.mediumFontSize;\n    }\n\n    drawFail(block) {\n        const { xPos, yPos, width, height } = block;\n        this.ctx.fillStyle = colors.blockFallingColor;\n        this.ctx.fillRect(xPos, yPos, width, height);\n    }\n\n    drawFinish(options) {\n        const timeTaken = this.stringifyTime();\n        clock.resetClock();\n        const { width, height } = options.boardSize;\n        this.ctx.fillStyle = colors.backgroundColor;\n        this.ctx.fillRect(0, 0, width, height);\n        this.ctx.font = fonts.largeFontSize;\n        this.ctx.fillStyle = colors.textColor;\n        this.ctx.fillText(\"Final Tally:\", width / 2 - 200, height / 5);\n        this.ctx.font = fonts.mediumFontSize;\n        this.ctx.fillText(`Moves: ${options.moves}`, width / 2 - 100, height * 3 / 10);\n        this.ctx.fillText(`Falls: ${options.falls}`, width / 2 - 100, height * 2 / 5);\n        this.ctx.fillText(`Time: ${timeTaken}`, width / 2 - 100, height / 2);\n        this.ctx.fillText(\"Press enter to start over\", width / 2 - 200, height * 3 / 5);\n    }\n}\n\nmodule.exports = Display;\n","function pause(game) {\n    game.pauseStatus = !game.pauseStatus;\n    game.pauseStatus === true ? pauseGame(game) : resumeGame(game);\n}\n\nfunction resumeGame(game) {\n    game.display.render(game.displayOptions());\n    game.display.drawBlock(game.block);\n    document.addEventListener(\"keydown\", game.move);\n    game.timerId = setInterval(game.runClock, 1000);\n}\n\nfunction pauseGame(game) {\n    clearInterval(game.timerId);\n    document.removeEventListener(\"keydown\", game.move);\n    game.display.drawPause(game.boardSize);\n}\n\nfunction getMove(e, block, length) {\n    e.preventDefault();\n    switch (e.keyCode) {\n    case 40: // down arrow key\n        block.transformBlock(0, 1 * length);\n        break;\n    case 38: // up arrow key\n        block.transformBlock(0, -1 * length);\n        break;\n    case 37: // left arrow key\n        block.transformBlock(-1 * length, 0);\n        break;\n    case 39: // right arrow key\n        block.transformBlock(1 * length, 0);\n    }\n}\n\nfunction restartGame(e, game, music) {\n    if (e.keyCode === 13) {\n        e.preventDefault();\n        game.moves = 0;\n        game.falls = 0;\n        game.pauseStatus = true;\n        game.levels.resetCurrentLevel();\n        music.startMenu();\n        game.redrawMenu(e);\n        document.removeEventListener(\"keydown\", game.restart);\n    }\n}\n\nmodule.exports = { pause, restartGame, getMove };\n","class Block {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.xPos = undefined;\n        this.yPos = undefined;\n    }\n\n    setPosition(coordinates) {\n        this.xPos = coordinates.xPos;\n        this.yPos = coordinates.yPos;\n    }\n\n    resetBlock(length, startPosition) {\n        this.width = length;\n        this.height = length;\n        this.xPos = startPosition.xPos;\n        this.yPos = startPosition.yPos;\n    }\n\n    changePosition(dx, dy) {\n        this.xPos += dx;\n        this.yPos += dy;\n    }\n\n    transformBlock(x, y) {\n        this.width === this.height ?\n            this.expand(x, y) : this.checkDimensionsAndMovement(x, y);\n    }\n\n    expand(x, y) {\n        x !== 0 ? this.expandWidth(x, y) : this.expandHeight(x, y);\n    }\n\n    // To simulate a rectangular prism, the block's dimensions and\n    // position must change differently depending on its current size and\n    // the direction it moves.\n    checkDimensionsAndMovement(x, y) {\n        if (this.width > this.height && x !== 0) {\n            this.contractWidth(x, y);\n        } else if (this.width < this.height && y !== 0) {\n            this.contractHeight(x, y);\n        } else {\n            this.changePosition(x, y);\n        }\n    }\n\n    expandWidth(x, y) {\n        this.width *= 2;\n        x > 0 ? this.changePosition(x, y) : this.changePosition(2 * x, y);\n    }\n\n    expandHeight(x, y) {\n        this.height *= 2;\n        y > 0 ? this.changePosition(x, y) : this.changePosition(x, 2 * y);\n    }\n\n    contractWidth(x, y) {\n        this.width /= 2;\n        x > 0 ? this.changePosition(2 * x, y) : this.changePosition(x, y);\n    }\n\n    contractHeight(x, y) {\n        this.height /= 2;\n        y > 0 ? this.changePosition(x, y * 2) : this.changePosition(x, y);\n    }\n}\n\nmodule.exports = Block;\n","const Block = require(\"./game_objects/block\");\nconst controls = require(\"./game_objects/controls\");\nconst Display = require(\"./game_objects/display\");\nconst LevelGenerator = require(\"./game_objects/level_generator\");\nconst Menu = require(\"./game_objects/menu\");\nconst sound = require(\"./game_objects/sound\");\n\nconst GameMusic = new sound.GameMusic();\n\nclass Game {\n    constructor(ctx, length, boardSize) {\n        this.boardSize = boardSize;\n        this.length = length;\n        this.pauseStatus = true;\n        this.moves = 0;\n        this.falls = 0;\n\n        this.display = new Display(ctx);\n        this.levels = new LevelGenerator();\n        this.block = new Block(length, length);\n        this.menu = new Menu(this.display, boardSize);\n\n        this.move = this.move.bind(this);\n        this.pause = this.pause.bind(this);\n        this.restart = this.restart.bind(this);\n        this.startMenu = this.startMenu.bind(this);\n        this.startGame = this.startGame.bind(this);\n        this.showControls = this.showControls.bind(this);\n        this.redrawMenu = this.redrawMenu.bind(this);\n        this.runClock = this.runClock.bind(this);\n    }\n\n    start() {\n        this.display.drawStart(this.boardSize);\n        const board = document.getElementById(\"canvas-container\");\n        board.addEventListener(\"click\", this.startMenu);\n    }\n\n    startGame(e) {\n        e.preventDefault();\n        this.pauseStatus = false;\n        this.menu.removeMenuButton(\"start-button\", this.startGame);\n        // this.menu.removeMenuButton(\"tutorial-button\", this.startTutorial);\n        this.menu.removeMenuButton(\"controls-button\", this.showControls);\n        GameMusic.startGame();\n        this.levels.constructFloor(this.length, this.boardSize);\n        this.block.setPosition(this.levels.currentStartPosition);\n        this.timerId = setInterval(this.runClock, 1000);\n        document.addEventListener(\"keydown\", this.move);\n        document.addEventListener(\"keydown\", this.pause);\n        this.display.render(this.displayOptions());\n        this.display.drawBlock(this.block);\n    }\n\n    // startTutorial(e) {\n    //     e.preventDefault();\n    //     this.menu.removeMenuButton(\"start-button\", this.startGame);\n    //     this.menu.removeMenuButton(\"tutorial-button\", this.startTutorial);\n    //     this.menu.removeMenuButton(\"controls-button\", this.showControls);\n    //     GameMusic.startMenu();\n    // }\n\n    startMenu(e) {\n        e.preventDefault();\n        this.menu.start(this.display, this, this.boardSize);\n        GameMusic.resumeMusic();\n        const board = document.getElementById(\"canvas-container\");\n        board.removeEventListener(\"click\", this.startMenu);\n    }\n\n    redrawMenu(e) {\n        e.preventDefault();\n        const backButton = document.getElementById(\"back-button\");\n        if (backButton !== null) {\n            backButton.removeEventListener(\"click\", this.reDrawMenu);\n            backButton.parentNode.removeChild(backButton);\n        }\n        this.menu.start(this.display, this, this.boardSize);\n    }\n\n    showControls(e) {\n        e.preventDefault();\n        this.menu.controlsMenu(this.display, this, this.boardSize);\n    }\n\n    runClock() {\n        this.display.drawTime(this.boardSize);\n    }\n\n    restart(e) {\n        controls.restartGame(e, this, GameMusic);\n    }\n\n    move(e) {\n        const arrowKeycodes = [37, 38, 39, 40];\n        if (arrowKeycodes.includes(e.keyCode)) {\n            controls.getMove(e, this.block, this.length);\n            this.moves += 1;\n            this.checkBlock();\n        }\n    }\n\n    pause(e) {\n        e.preventDefault();\n        if (e.keyCode === 13) { // enter key\n            controls.pause(this);\n        }\n    }\n\n    displayOptions() {\n        return {\n            level: this.levels.constructedFloor,\n            levelNumber: this.levels.currentLevel,\n            moves: this.moves,\n            falls: this.falls,\n            length: this.length,\n            boardSize: this.boardSize,\n        };\n    }\n\n    checkBlock() {\n        if (this.block.width === this.block.height) {\n            this.checkGoal();\n        }\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] !== undefined) {\n            this.checkBounds();\n        }\n    }\n\n    checkGoal() {\n        const { xPos, yPos } = this.block;\n        const tile = this.levels.lookupTile({ xPos, yPos });\n        if (tile !== undefined && tile.type === \"goal\") {\n            this.nextLevel();\n        }\n    }\n\n    nextLevel() {\n        sound.playGoalSound();\n        this.levels.nextLevel();\n        const { levelData, currentLevel } = this.levels;\n        if (levelData[currentLevel] === undefined) {\n            this.endGame();\n        } else {\n            this.levels.constructFloor(this.length, this.boardSize);\n            this.block.setPosition(this.levels.currentStartPosition);\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n        }\n    }\n\n    endGame() {\n        document.removeEventListener(\"keydown\", this.move);\n        document.removeEventListener(\"keydown\", this.pause);\n        clearInterval(this.timerId);\n        this.display.drawFinish(this.displayOptions());\n        document.addEventListener(\"keydown\", this.restart);\n    }\n\n    checkBounds() {\n        const { currentLevel, levelData } = this.levels;\n        const coordinates = this.getCoordinates();\n        if (this.display.tileMovesOffFloor(coordinates)) {\n            this.resetLevel();\n        } else if (levelData[currentLevel] !== undefined) {\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n            sound.playBlockSound(this.block);\n        }\n    }\n\n    // gets current position of block. Coordinates are set to avoid bugs related\n    // to narrow gaps.\n    getCoordinates() {\n        const { xPos, yPos, width, height } = this.block;\n        return [\n            [xPos + Math.floor(width / 4), yPos + Math.floor(height / 4)],\n            [xPos + Math.floor(width * 3 / 4), yPos + Math.floor(height * 3 / 4)],\n        ];\n    }\n\n    resetLevel() {\n        document.removeEventListener(\"keydown\", this.move);\n        this.falls += 1;\n        this.flashFailure();\n    }\n\n    flashFailure() {\n        this.display.render(this.displayOptions());\n        this.display.drawFail(this.block);\n        sound.playFallSound();\n        this.block.resetBlock(this.length, this.levels.currentStartPosition);\n        setTimeout(() => {\n            this.display.render(this.displayOptions());\n            this.display.drawBlock(this.block);\n            document.addEventListener(\"keydown\", this.move);\n        }, 800);\n    }\n}\n\nmodule.exports = Game;\n","const Game = require(\"./game\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const blockheadBoard = document.getElementById(\"blockhead\");\n    const blockheadBoardContainer = document.getElementById(\"canvas-container\");\n    const ctx = blockheadBoard.getContext(\"2d\");\n\n    const boardSize = {\n        width: blockheadBoardContainer.offsetWidth,\n        height: blockheadBoardContainer.offsetHeight,\n    };\n    blockheadBoard.width = boardSize.width;\n    blockheadBoard.height = boardSize.height;\n\n    new Game(ctx, 30, boardSize).start();\n});"],"sourceRoot":""}