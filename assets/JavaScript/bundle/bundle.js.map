{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/JavaScript/page_buttons.js","webpack:///./assets/JavaScript/levels/level_nine.js","webpack:///./assets/JavaScript/levels/level_eight.js","webpack:///./assets/JavaScript/levels/level_seven.js","webpack:///./assets/JavaScript/levels/level_six.js","webpack:///./assets/JavaScript/levels/level_five.js","webpack:///./assets/JavaScript/levels/level_four.js","webpack:///./assets/JavaScript/levels/level_three.js","webpack:///./assets/JavaScript/levels/level_two.js","webpack:///./assets/JavaScript/levels/level_one.js","webpack:///./assets/JavaScript/levels/tutorial.js","webpack:///./assets/JavaScript/levels/all_levels.js","webpack:///./assets/JavaScript/game_objects/sound.js","webpack:///./assets/JavaScript/game_objects/menu.js","webpack:///./assets/JavaScript/game_objects/tile.js","webpack:///./assets/JavaScript/game_objects/level_generator.js","webpack:///./assets/JavaScript/game_objects/clock.js","webpack:///./assets/JavaScript/game_objects/display.js","webpack:///./assets/JavaScript/game_objects/controls.js","webpack:///./assets/JavaScript/game_objects/block.js","webpack:///./assets/JavaScript/game.js","webpack:///./assets/JavaScript/blockhead.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","[object Object]","this","toggleImage","activateTutorialImages","activateDirections","forEach","id","button","document","getElementById","displayImage","addEventListener","display","toggleDirections","image","className","directions","floorDimensions","xRange","yRange","warpData","12.7","activatorData","8.9","13.1","14.3","floorData","x","y","type","active","9.5","1.2","2.1","0.1","1.0","5.1","6.1","9.1","6.5","14.6","6.2","tutorial","levelOne","levelTwo","levelThree","levelFour","1","2","3","4","rectangleSound","squareSound","fallSound","completeLevelSound","warpSound","bridgeUpSound","bridgeDownSound","gameMusic","menuMusic","toggleMusic","musicButton","playMusic","loop","play","pausMusic","resumeMusic","pause","block","height","width","tile","context","blockSize","canvas","addEventListenenr","startGame","beginTutorial","alterOptions","e","preventDefault","options","xPos","yPos","typeReference","checkActiveStatus","status","undefined","Tile","length","levels","currentLevel","levelData","constructTileCoordinates","constructedFloor","generateLevel","currentStartPosition","getStart","floor","position","level","startPosition","centerFloor","setCoordinates","floorWidth","floorHeight","Math","newFloor","tileData","tileOptions","tilePosition","currentPosition","gameTimeSeconds","gameTime","seconds","minutes","GameClock","ctx","clock","colors","fonts","fillStyle","backgroundColor","fillRect","drawTime","textColor","blockColor","blockFallingColor","tileColors","start","goal","none","collapsible","warp","activator","bridge","mediumFontSize","largeFontSize","font","fillText","levelNumber","moves","falls","drawFloor","strokeRect","currentTime","displayTime","stringifyTime","upTick","colorData","concat","coordinates","corner","getImageData","data","slice","stringifyRGBData","oldOptions","time","pauseStatus","game","keyCode","resetCurrentLevel","removeEventListener","restart","transformBlock","pauseGame","resumeGame","clearInterval","timerId","move","drawPause","render","displayOptions","drawBlock","setInterval","dimensions","dx","dy","expand","checkDimensionsAndMovement","expandWidth","expandHeight","contractWidth","contractHeight","changePosition","Block","Controls","Display","LevelGenerator","Sound","allLevels","sound","controls","constructFloor","setPosition","restartGame","includes","getMove","checkBlock","pauseButton","checkGoal","checkBounds","lookupTile","nextLevel","playGoalSound","endGame","drawFinish","getCoordinates","tileMovesOffFloor","resetLevel","playBlockSound","flashFailure","drawFail","properties","playFallSound","resetBlock","setTimeout","Game","PageButtons","blockheadBoard","getContext"],"mappings":"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ACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,oBCjCL/D,EAAAD,SA1DAmD,iBAAoBC,OAAA,GAAAC,OAAA,GACpBC,UACAW,MAAA,YACAC,MAAA,YACAC,MAAA,YACAC,KAAA,YACAC,QAAA,aAEAb,eACAc,MAAA,YACAC,MAAA,aAEAX,YACKC,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,sBCiCL9D,EAAAD,SAvFAmD,iBAAoBC,OAAA,GAAAC,OAAA,IACpBO,YACKC,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,sBCCL9D,EAAAD,SApFAmD,iBAAoBC,OAAA,GAAAC,OAAA,IACpBG,eACAgB,MAAA,YACAC,MAAA,wBACAC,OAAA,aAEAd,YACKC,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,IAAAC,QAAA,IACAH,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,sBCVL9D,EAAAD,SAtEAmD,iBAAoBC,OAAA,GAAAC,OAAA,GACpBC,UAAaqB,MAAA,cACbf,YACKC,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,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EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,EAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,KAAA,MACAF,EAAA,GAAAC,EAAA,EAAAC,K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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","class PageButtons {\n  constructor() {\n    this.toggleImage = this.toggleImage.bind(this);\n\n    this.activateTutorialImages();\n    this.activateDirections();\n  }\n\n  activateTutorialImages() {\n    const imageIds = ['falling', 'goal', 'move', 'transform'];\n    imageIds.forEach(id => {\n      let button = document.getElementById(`${id}-button`);\n      let displayImage = document.getElementById(`${id}`);\n      button.addEventListener(\"click\", () => {\n        this.toggleImage(displayImage);\n      });\n    });\n  }\n\n  activateDirections() {\n    const button = document.getElementById('direct-button');\n    const display = document.getElementById('direct');\n    button.addEventListener(\"click\", () => {\n      this.toggleDirections(display);\n    });\n  }\n\n  toggleImage(image) {\n    image.className === \"hidden\" ?\n      image.className = \"show\" : image.className = \"hidden\";\n  }\n\n  toggleDirections(directions) {\n    directions.className === \"hidden\" ?\n      directions.className = \"display\" : directions.className = \"hidden\";\n  }\n}\n\nmodule.exports = PageButtons;\n","const levelNine = {\n  floorDimensions: { xRange: 15, yRange: 10 },\n  warpData: { '12.7': [[12, 7], [2, 1]] },\n  activatorData: {\n    '8.9': [[1, 6], [2, 6], [0, 2]],\n    '13.1': [[10, 2], [11, 2], [8, 2], [8, 3], [7, 3]],\n    '14.3': [[14, 6]],\n  },\n  floorData: [\n    { x: 4, y: 8, type: \"s\" },\n    { x: 7, y: 2, type: \"g\" },\n    { x: 0, y: 2, type: \"b\", active: false },\n    { x: 0, y: 3, type: \"n\" },\n    { x: 0, y: 4, type: \"n\" },\n    { x: 0, y: 5, type: \"n\" },\n    { x: 0, y: 6, type: \"n\" },\n    { x: 1, y: 0, type: \"n\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 6, type: \"b\", active: false },\n    { x: 2, y: 0, type: \"n\" },\n    { x: 2, y: 1, type: \"n\" },\n    { x: 2, y: 2, type: \"n\" },\n    { x: 2, y: 6, type: \"b\", active: false },\n    { x: 3, y: 0, type: \"n\" },\n    { x: 3, y: 1, type: \"n\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 3, y: 6, type: \"n\" },\n    { x: 3, y: 7, type: \"n\" },\n    { x: 3, y: 8, type: \"n\" },\n    { x: 3, y: 9, type: \"n\" },\n    { x: 4, y: 6, type: \"n\" },\n    { x: 4, y: 7, type: \"n\" },\n    { x: 4, y: 9, type: \"n\" },\n    { x: 5, y: 6, type: \"n\" },\n    { x: 5, y: 7, type: \"n\" },\n    { x: 5, y: 8, type: \"n\" },\n    { x: 5, y: 9, type: \"n\" },\n    { x: 6, y: 6, type: \"c\" },\n    { x: 6, y: 7, type: \"c\" },\n    { x: 6, y: 8, type: \"c\" },\n    { x: 6, y: 9, type: \"n\" },\n    { x: 7, y: 3, type: \"b\", active: false },\n    { x: 7, y: 4, type: \"n\" },\n    { x: 7, y: 5, type: \"c\" },\n    { x: 7, y: 6, type: \"c\" },\n    { x: 7, y: 7, type: \"c\" },\n    { x: 7, y: 8, type: \"c\" },\n    { x: 7, y: 9, type: \"n\" },\n    { x: 8, y: 2, type: \"b\", active: false },\n    { x: 8, y: 3, type: \"b\", active: false },\n    { x: 8, y: 4, type: \"n\" },\n    { x: 8, y: 5, type: \"c\" },\n    { x: 8, y: 6, type: \"c\" },\n    { x: 8, y: 7, type: \"c\" },\n    { x: 8, y: 8, type: \"c\" },\n    { x: 8, y: 9, type: \"a\" },\n    { x: 9, y: 2, type: \"n\" },\n    { x: 9, y: 3, type: \"n\" },\n    { x: 9, y: 4, type: \"n\" },\n    { x: 9, y: 5, type: \"c\" },\n    { x: 9, y: 6, type: \"c\" },\n    { x: 9, y: 7, type: \"c\" },\n    { x: 9, y: 8, type: \"c\" },\n    { x: 10, y: 2, type: \"b\", active: true },\n    { x: 10, y: 6, type: \"c\" },\n    { x: 10, y: 7, type: \"c\" },\n    { x: 10, y: 8, type: \"c\" },\n    { x: 11, y: 2, type: \"b\", active: true },\n    { x: 11, y: 6, type: \"n\" },\n    { x: 11, y: 7, type: \"n\" },\n    { x: 11, y: 8, type: \"n\" },\n    { x: 12, y: 0, type: \"n\" },\n    { x: 12, y: 1, type: \"n\" },\n    { x: 12, y: 2, type: \"n\" },\n    { x: 12, y: 3, type: \"n\" },\n    { x: 12, y: 6, type: \"n\" },\n    { x: 12, y: 7, type: \"w\" },\n    { x: 12, y: 8, type: \"n\" },\n    { x: 13, y: 0, type: \"n\" },\n    { x: 13, y: 1, type: \"a\" },\n    { x: 13, y: 2, type: \"n\" },\n    { x: 13, y: 3, type: \"n\" },\n    { x: 13, y: 6, type: \"n\" },\n    { x: 13, y: 7, type: \"n\" },\n    { x: 13, y: 8, type: \"n\" },\n    { x: 14, y: 0, type: \"n\" },\n    { x: 14, y: 1, type: \"n\" },\n    { x: 14, y: 2, type: \"n\" },\n    { x: 14, y: 3, type: \"a\" },\n    { x: 14, y: 4, type: \"n\" },\n    { x: 14, y: 5, type: \"n\" },\n    { x: 14, y: 6, type: \"b\", active: false },\n  ],\n};\n\nmodule.exports = levelNine;\n","const levelEight = {\n  floorDimensions: { xRange: 13, yRange: 7 },\n  warpData: {\n    '9.5': [[0, 1], [1, 0]],\n    '1.2': [[1, 2], [0, 1]],\n    '2.1': [[0, 1], [2, 1]],\n    '0.1': [[1, 0], [2, 1]],\n    '1.0': [[5, 1], [7, 1]],\n  },\n  activatorData: {\n    '5.1': [[3, 1], [4, 1]],\n    '6.1': [[8, 1], [9, 1]],\n  },\n  floorData: [\n    { x: 11, y: 1, type: \"g\" },\n    { x: 3, y: 5, type: \"s\" },\n    { x: 0, y: 1, type: \"w\" },\n    { x: 1, y: 0, type: \"w\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 1, y: 2, type: \"w\" },\n    { x: 2, y: 1, type: \"w\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 2, y: 5, type: \"n\" },\n    { x: 2, y: 6, type: \"n\" },\n    { x: 3, y: 1, type: \"b\", active: false },\n    { x: 3, y: 4, type: \"n\" },\n    { x: 3, y: 6, type: \"n\" },\n    { x: 4, y: 1, type: \"b\", active: false },\n    { x: 4, y: 4, type: \"n\" },\n    { x: 4, y: 5, type: \"n\" },\n    { x: 4, y: 6, type: \"n\" },\n    { x: 5, y: 1, type: \"a\" },\n    { x: 5, y: 5, type: \"n\" },\n    { x: 6, y: 1, type: \"a\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 7, y: 1, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 8, y: 1, type: \"b\", active: false },\n    { x: 8, y: 4, type: \"n\" },\n    { x: 8, y: 5, type: \"n\" },\n    { x: 8, y: 6, type: \"n\" },\n    { x: 9, y: 1, type: \"b\", active: false },\n    { x: 9, y: 4, type: \"n\" },\n    { x: 9, y: 5, type: \"w\" },\n    { x: 9, y: 6, type: \"n\" },\n    { x: 10, y: 0, type: \"n\" },\n    { x: 10, y: 1, type: \"n\" },\n    { x: 10, y: 2, type: \"n\" },\n    { x: 10, y: 4, type: \"n\" },\n    { x: 10, y: 5, type: \"n\" },\n    { x: 10, y: 6, type: \"n\" },\n    { x: 11, y: 0, type: \"n\" },\n    { x: 11, y: 2, type: \"n\" },\n    { x: 12, y: 0, type: \"n\" },\n    { x: 12, y: 1, type: \"n\" },\n    { x: 12, y: 2, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelEight;\n","const levelSeven = {\n  floorDimensions: { xRange: 14, yRange: 10 },\n  floorData: [\n    { x: 12, y: 3, type: \"s\" },\n    { x: 7, y: 4, type: \"g\" },\n    { x: 0, y: 0, type: \"n\" },\n    { x: 0, y: 1, type: \"n\" },\n    { x: 0, y: 2, type: \"n\" },\n    { x: 0, y: 3, type: \"n\" },\n    { x: 0, y: 4, type: \"n\" },\n    { x: 0, y: 5, type: \"n\" },\n    { x: 1, y: 0, type: \"n\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 1, y: 4, type: \"n\" },\n    { x: 1, y: 5, type: \"n\" },\n    { x: 2, y: 0, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 2, y: 5, type: \"n\" },\n    { x: 2, y: 6, type: \"n\" },\n    { x: 2, y: 7, type: \"n\" },\n    { x: 3, y: 0, type: \"c\" },\n    { x: 3, y: 4, type: \"c\" },\n    { x: 3, y: 7, type: \"n\" },\n    { x: 3, y: 8, type: \"n\" },\n    { x: 3, y: 9, type: \"n\" },\n    { x: 4, y: 0, type: \"n\" },\n    { x: 4, y: 4, type: \"c\" },\n    { x: 4, y: 7, type: \"n\" },\n    { x: 4, y: 8, type: \"n\" },\n    { x: 4, y: 9, type: \"n\" },\n    { x: 5, y: 0, type: \"n\" },\n    { x: 5, y: 4, type: \"c\" },\n    { x: 5, y: 5, type: \"c\" },\n    { x: 5, y: 6, type: \"c\" },\n    { x: 5, y: 7, type: \"c\" },\n    { x: 5, y: 8, type: \"c\" },\n    { x: 5, y: 9, type: \"n\" },\n    { x: 6, y: 0, type: \"n\" },\n    { x: 6, y: 3, type: \"n\" },\n    { x: 6, y: 4, type: \"n\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 6, y: 6, type: \"c\" },\n    { x: 6, y: 7, type: \"c\" },\n    { x: 6, y: 8, type: \"c\" },\n    { x: 7, y: 0, type: \"n\" },\n    { x: 7, y: 3, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 7, y: 6, type: \"c\" },\n    { x: 7, y: 7, type: \"n\" },\n    { x: 7, y: 8, type: \"c\" },\n    { x: 8, y: 0, type: \"c\" },\n    { x: 8, y: 3, type: \"n\" },\n    { x: 8, y: 4, type: \"n\" },\n    { x: 8, y: 5, type: \"n\" },\n    { x: 8, y: 6, type: \"c\" },\n    { x: 8, y: 7, type: \"c\" },\n    { x: 8, y: 8, type: \"c\" },\n    { x: 8, y: 9, type: \"n\" },\n    { x: 9, y: 0, type: \"n\" },\n    { x: 9, y: 6, type: \"c\" },\n    { x: 9, y: 7, type: \"c\" },\n    { x: 9, y: 8, type: \"c\" },\n    { x: 9, y: 9, type: \"n\" },\n    { x: 10, y: 0, type: \"n\" },\n    { x: 10, y: 1, type: \"n\" },\n    { x: 10, y: 6, type: \"n\" },\n    { x: 10, y: 7, type: \"c\" },\n    { x: 10, y: 8, type: \"c\" },\n    { x: 11, y: 0, type: \"n\" },\n    { x: 11, y: 1, type: \"n\" },\n    { x: 11, y: 2, type: \"n\" },\n    { x: 11, y: 3, type: \"n\" },\n    { x: 11, y: 4, type: \"n\" },\n    { x: 11, y: 5, type: \"n\" },\n    { x: 11, y: 6, type: \"n\" },\n    { x: 12, y: 0, type: \"n\" },\n    { x: 12, y: 1, type: \"n\" },\n    { x: 12, y: 2, type: \"n\" },\n    { x: 12, y: 4, type: \"n\" },\n    { x: 13, y: 2, type: \"n\" },\n    { x: 13, y: 3, type: \"n\" },\n    { x: 13, y: 4, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelSeven;\n","const levelSix = {\n  floorDimensions: { xRange: 16, yRange: 10 },\n  activatorData: {\n    '9.1': [[5, 1], [6, 1]],\n    '6.5': [[8, 5], [9, 5], [5, 8], [6, 8]],\n    '14.6':  [[5, 8], [6, 8]],\n  },\n  floorData: [\n    { x: 14, y: 1, type: \"s\" },\n    { x: 1, y: 8, type: \"g\" },\n    { x: 0, y: 7, type: \"n\" },\n    { x: 0, y: 8, type: \"n\" },\n    { x: 0, y: 9, type: \"n\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 1, y: 4, type: \"n\" },\n    { x: 1, y: 7, type: \"n\" },\n    { x: 1, y: 9, type: \"n\" },\n    { x: 2, y: 1, type: \"n\" },\n    { x: 2, y: 2, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 2, y: 7, type: \"n\" },\n    { x: 2, y: 8, type: \"n\" },\n    { x: 2, y: 9, type: \"n\" },\n    { x: 3, y: 1, type: \"n\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 3, y: 3, type: \"n\" },\n    { x: 3, y: 4, type: \"n\" },\n    { x: 3, y: 5, type: \"n\" },\n    { x: 3, y: 8, type: \"n\" },\n    { x: 3, y: 9, type: \"n\" },\n    { x: 4, y: 1, type: \"n\" },\n    { x: 4, y: 2, type: \"n\" },\n    { x: 4, y: 3, type: \"n\" },\n    { x: 4, y: 4, type: \"n\" },\n    { x: 4, y: 5, type: \"n\" },\n    { x: 4, y: 8, type: \"n\" },\n    { x: 5, y: 1, type: \"b\", active: false },\n    { x: 5, y: 5, type: \"n\" },\n    { x: 5, y: 8, type: \"b\", active: true },\n    { x: 6, y: 1, type: \"b\", active: false },\n    { x: 6, y: 5, type: \"a\" },\n    { x: 6, y: 8, type: \"b\", active: true },\n    { x: 7, y: 1, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 7, y: 8, type: \"n\" },\n    { x: 8, y: 1, type: \"n\" },\n    { x: 8, y: 5, type: \"b\", active: false },\n    { x: 8, y: 8, type: \"n\" },\n    { x: 9, y: 1, type: \"a\" },\n    { x: 9, y: 5, type: \"b\", active: false },\n    { x: 9, y: 8, type: \"n\" },\n    { x: 10, y: 1, type: \"n\" },\n    { x: 10, y: 5, type: \"n\" },\n    { x: 10, y: 6, type: \"n\" },\n    { x: 10, y: 7, type: \"n\" },\n    { x: 10, y: 8, type: \"n\" },\n    { x: 11, y: 1, type: \"n\" },\n    { x: 11, y: 5, type: \"n\" },\n    { x: 11, y: 6, type: \"n\" },\n    { x: 11, y: 7, type: \"n\" },\n    { x: 11, y: 8, type: \"n\" },\n    { x: 12, y: 0, type: \"n\" },\n    { x: 12, y: 1, type: \"n\" },\n    { x: 12, y: 5, type: \"n\" },\n    { x: 12, y: 6, type: \"n\" },\n    { x: 12, y: 7, type: \"n\" },\n    { x: 12, y: 8, type: \"n\" },\n    { x: 13, y: 0, type: \"n\" },\n    { x: 13, y: 1, type: \"n\" },\n    { x: 13, y: 2, type: \"n\" },\n    { x: 13, y: 6, type: \"n\" },\n    { x: 13, y: 7, type: \"n\" },\n    { x: 14, y: 0, type: \"n\" },\n    { x: 14, y: 2, type: \"n\" },\n    { x: 14, y: 6, type: \"a\" },\n    { x: 14, y: 7, type: \"n\" },\n    { x: 15, y: 0, type: \"n\" },\n    { x: 15, y: 1, type: \"n\" },\n    { x: 15, y: 2, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelSix;\n","const levelFive = {\n  floorDimensions: { xRange: 14, yRange: 9 },\n  warpData: { '6.2': [[9, 2], [11, 2]] },\n  floorData: [\n    { x: 1, y: 5, type: \"s\" },\n    { x: 12, y: 7, type: \"g\" },\n    { x: 0, y: 2, type: \"n\" },\n    { x: 0, y: 3, type: \"n\" },\n    { x: 0, y: 4, type: \"n\" },\n    { x: 0, y: 5, type: \"n\" },\n    { x: 0, y: 6, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 1, y: 4, type: \"n\" },\n    { x: 1, y: 6, type: \"n\" },\n    { x: 2, y: 2, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 2, y: 5, type: \"n\" },\n    { x: 2, y: 6, type: \"n\" },\n    { x: 3, y: 0, type: \"c\" },\n    { x: 3, y: 1, type: \"c\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 4, y: 0, type: \"c\" },\n    { x: 4, y: 1, type: \"c\" },\n    { x: 5, y: 0, type: \"c\" },\n    { x: 5, y: 1, type: \"c\" },\n    { x: 5, y: 5, type: \"n\" },\n    { x: 5, y: 6, type: \"n\" },\n    { x: 5, y: 7, type: \"n\" },\n    { x: 5, y: 8, type: \"n\" },\n    { x: 6, y: 0, type: \"c\" },\n    { x: 6, y: 1, type: \"c\" },\n    { x: 6, y: 2, type: \"w\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 6, y: 6, type: \"n\" },\n    { x: 6, y: 7, type: \"n\" },\n    { x: 6, y: 8, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 7, y: 6, type: \"n\" },\n    { x: 7, y: 7, type: \"n\" },\n    { x: 7, y: 8, type: \"n\" },\n    { x: 8, y: 5, type: \"n\" },\n    { x: 8, y: 6, type: \"n\" },\n    { x: 9, y: 2, type: \"n\" },\n    { x: 9, y: 5, type: \"c\" },\n    { x: 9, y: 6, type: \"c\" },\n    { x: 10, y: 2, type: \"n\" },\n    { x: 10, y: 3, type: \"n\" },\n    { x: 10, y: 4, type: \"n\" },\n    { x: 10, y: 5, type: \"c\" },\n    { x: 10, y: 6, type: \"c\" },\n    { x: 10, y: 7, type: \"c\" },\n    { x: 10, y: 8, type: \"c\" },\n    { x: 11, y: 2, type: \"n\" },\n    { x: 11, y: 3, type: \"n\" },\n    { x: 11, y: 4, type: \"n\" },\n    { x: 11, y: 5, type: \"c\" },\n    { x: 11, y: 6, type: \"c\" },\n    { x: 11, y: 7, type: \"c\" },\n    { x: 11, y: 8, type: \"c\" },\n    { x: 12, y: 5, type: \"n\" },\n    { x: 12, y: 6, type: \"n\" },\n    { x: 12, y: 8, type: \"n\" },\n    { x: 13, y: 5, type: \"n\" },\n    { x: 13, y: 6, type: \"n\" },\n    { x: 13, y: 7, type: \"n\" },\n    { x: 13, y: 8, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelFive;\n","const levelFour = {\n  floorDimensions: { xRange: 14, yRange: 10, },\n  floorData: [\n    { x: 0, y: 6, type: \"s\" },\n    { x: 13, y: 5, type: \"g\" },\n    { x: 1, y: 6, type: \"n\" },\n    { x: 2, y: 6, type: \"n\" },\n    { x: 3, y: 6, type: \"n\" },\n    { x: 4, y: 6, type: \"n\" },\n    { x: 4, y: 5, type: \"n\" },\n    { x: 4, y: 4, type: \"n\" },\n    { x: 5, y: 9, type: \"n\" },\n    { x: 5, y: 8, type: \"n\" },\n    { x: 5, y: 7, type: \"n\" },\n    { x: 5, y: 6, type: \"n\" },\n    { x: 5, y: 5, type: \"n\" },\n    { x: 5, y: 4, type: \"n\" },\n    { x: 6, y: 9, type: \"n\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 6, y: 4, type: \"n\" },\n    { x: 6, y: 3, type: \"n\" },\n    { x: 6, y: 2, type: \"n\" },\n    { x: 6, y: 1, type: \"n\" },\n    { x: 7, y: 9, type: \"n\" },\n    { x: 7, y: 2, type: \"n\" },\n    { x: 7, y: 1, type: \"n\" },\n    { x: 7, y: 0, type: \"n\" },\n    { x: 8, y: 9, type: \"n\" },\n    { x: 8, y: 8, type: \"n\" },\n    { x: 8, y: 7, type: \"n\" },\n    { x: 8, y: 2, type: \"n\" },\n    { x: 8, y: 1, type: \"n\" },\n    { x: 8, y: 0, type: \"n\" },\n    { x: 9, y: 9, type: \"n\" },\n    { x: 9, y: 8, type: \"n\" },\n    { x: 9, y: 7, type: \"n\" },\n    { x: 9, y: 3, type: \"n\" },\n    { x: 9, y: 2, type: \"n\" },\n    { x: 9, y: 1, type: \"n\" },\n    { x: 9, y: 0, type: \"n\" },\n    { x: 10, y: 9, type: \"n\" },\n    { x: 10, y: 8, type: \"n\" },\n    { x: 10, y: 7, type: \"n\" },\n    { x: 10, y: 3, type: \"n\" },\n    { x: 10, y: 2, type: \"n\" },\n    { x: 10, y: 1, type: \"n\" },\n    { x: 11, y: 7, type: \"n\" },\n    { x: 11, y: 6, type: \"n\" },\n    { x: 11, y: 5, type: \"n\" },\n    { x: 12, y: 7, type: \"n\" },\n    { x: 12, y: 6, type: \"n\" },\n    { x: 12, y: 5, type: \"n\" },\n    { x: 13, y: 6, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelFour;\n","const levelThree = {\n  floorDimensions: { xRange: 15, yRange: 6, },\n  floorData: [\n    { x: 1, y: 2, type: \"s\" },\n    { x: 13, y: 2, type: \"g\" },\n    { x: 0, y: 4, type: \"n\" },\n    { x: 0, y: 3, type: \"n\" },\n    { x: 0, y: 2, type: \"n\" },\n    { x: 0, y: 1, type: \"n\" },\n    { x: 1, y: 4, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 2, y: 2, type: \"n\" },\n    { x: 2, y: 1, type: \"n\" },\n    { x: 3, y: 4, type: \"n\" },\n    { x: 3, y: 3, type: \"n\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 3, y: 1, type: \"n\" },\n    { x: 4, y: 3, type: \"n\" },\n    { x: 5, y: 3, type: \"n\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 6, y: 4, type: \"n\" },\n    { x: 6, y: 3, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 7, y: 4, type: \"n\" },\n    { x: 7, y: 3, type: \"n\" },\n    { x: 8, y: 5, type: \"n\" },\n    { x: 8, y: 4, type: \"n\" },\n    { x: 8, y: 3, type: \"n\" },\n    { x: 9, y: 5, type: \"n\" },\n    { x: 10, y: 5, type: \"n\" },\n    { x: 11, y: 5, type: \"n\" },\n    { x: 11, y: 4, type: \"n\" },\n    { x: 11, y: 3, type: \"n\" },\n    { x: 11, y: 2, type: \"n\" },\n    { x: 11, y: 1, type: \"n\" },\n    { x: 12, y: 5, type: \"n\" },\n    { x: 12, y: 4, type: \"n\" },\n    { x: 12, y: 3, type: \"n\" },\n    { x: 12, y: 2, type: \"n\" },\n    { x: 12, y: 1, type: \"n\" },\n    { x: 12, y: 0, type: \"n\" },\n    { x: 13, y: 3, type: \"n\" },\n    { x: 13, y: 1, type: \"n\" },\n    { x: 13, y: 0, type: \"n\" },\n    { x: 14, y: 3, type: \"n\" },\n    { x: 14, y: 2, type: \"n\" },\n    { x: 14, y: 1, type: \"n\" },\n    { x: 14, y: 0, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelThree;\n","const levelTwo = {\n  floorDimensions: { xRange: 10, yRange: 6, },\n  floorData: [\n    { x: 1, y: 1, type: \"s\" },\n    { x: 7, y: 4, type: \"g\" },\n    { x: 0, y: 0, type: \"n\" },\n    { x: 0, y: 1, type: \"n\" },\n    { x: 0, y: 2, type: \"n\" },\n    { x: 1, y: 0, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 2, y: 0, type: \"n\" },\n    { x: 2, y: 1, type: \"n\" },\n    { x: 2, y: 2, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 3, y: 1, type: \"n\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 3, y: 3, type: \"n\" },\n    { x: 4, y: 1, type: \"n\" },\n    { x: 4, y: 2, type: \"n\" },\n    { x: 4, y: 3, type: \"n\" },\n    { x: 5, y: 1, type: \"n\" },\n    { x: 5, y: 2, type: \"n\" },\n    { x: 5, y: 3, type: \"n\" },\n    { x: 5, y: 4, type: \"n\" },\n    { x: 6, y: 2, type: \"n\" },\n    { x: 6, y: 3, type: \"n\" },\n    { x: 6, y: 4, type: \"n\" },\n    { x: 6, y: 5, type: \"n\" },\n    { x: 7, y: 2, type: \"n\" },\n    { x: 7, y: 3, type: \"n\" },\n    { x: 7, y: 5, type: \"n\" },\n    { x: 8, y: 2, type: \"n\" },\n    { x: 8, y: 3, type: \"n\" },\n    { x: 8, y: 4, type: \"n\" },\n    { x: 8, y: 5, type: \"n\" },\n    { x: 9, y: 3, type: \"n\" },\n    { x: 9, y: 4, type: \"n\" },\n  ],\n};\n\nmodule.exports = levelTwo;\n","const levelOne = {\n  floorDimensions: { xRange: 10, yRange: 1, },\n  floorData: [\n    { x: 0, y: 0, type: \"s\" },\n    { x: 9, y: 0, type: \"g\" },\n    { x: 1, y: 0, type: \"n\" },\n    { x: 2, y: 0, type: \"n\" },\n    { x: 3, y: 0, type: \"n\" },\n    { x: 4, y: 0, type: \"n\" },\n    { x: 5, y: 0, type: \"n\" },\n    { x: 6, y: 0, type: \"n\" },\n    { x: 7, y: 0, type: \"n\" },\n    { x: 8, y: 0, type: \"n\" }\n  ],\n};\n\nmodule.exports = levelOne;\n","const tutorial = {\n  floorDimensions: { xRange: 5, yRange: 5, },\n  floorData: [\n    { x: 0, y: 0, type: \"s\" },\n    { x: 2, y: 2, type: \"g\" },\n    { x: 0, y: 1, type: \"n\" },\n    { x: 0, y: 2, type: \"n\" },\n    { x: 0, y: 3, type: \"n\" },\n    { x: 0, y: 4, type: \"n\" },\n    { x: 1, y: 0, type: \"n\" },\n    { x: 1, y: 1, type: \"n\" },\n    { x: 1, y: 2, type: \"n\" },\n    { x: 1, y: 3, type: \"n\" },\n    { x: 1, y: 4, type: \"n\" },\n    { x: 2, y: 0, type: \"n\" },\n    { x: 2, y: 1, type: \"n\" },\n    { x: 2, y: 3, type: \"n\" },\n    { x: 2, y: 4, type: \"n\" },\n    { x: 3, y: 0, type: \"n\" },\n    { x: 3, y: 1, type: \"n\" },\n    { x: 3, y: 2, type: \"n\" },\n    { x: 3, y: 3, type: \"n\" },\n    { x: 3, y: 4, type: \"n\" },\n    { x: 4, y: 0, type: \"n\" },\n    { x: 4, y: 1, type: \"n\" },\n    { x: 4, y: 2, type: \"n\" },\n    { x: 4, y: 3, type: \"n\" },\n    { x: 4, y: 4, type: \"n\" },\n  ],\n};\n\nmodule.exports = tutorial;\n","const tutorial = require('./tutorial');\nconst levelOne = require('./level_one');\nconst levelTwo = require('./level_two');\nconst levelThree = require('./level_three');\nconst levelFour = require('./level_four');\nconst levelFive = require('./level_five');\nconst levelSix = require('./level_six');\nconst levelSeven = require('./level_seven');\nconst levelEight = require('./level_eight');\nconst levelNine = require('./level_nine');\n\nmodule.exports = {\n  tutorial: tutorial,\n  1: levelOne,\n  2: levelTwo,\n  3: levelThree,\n  4: levelFour,\n};\n\n// 6: levelSix,\n// 7: levelSeven,\n// 8: levelEight,\n// 9: levelNine,\n// 5: levelFive,\n","class Sound {\n  constructor() {\n    this.rectangleSound = document.getElementById(\"block-rectangle\");\n    this.squareSound = document.getElementById(\"block-square\");\n    this.fallSound = document.getElementById(\"fall\");\n    this.completeLevelSound = document.getElementById(\"complete-level\");\n    this.warpSound = document.getElementById(\"warp\");\n    this.bridgeUpSound = document.getElementById(\"bridge-up\");\n    this.bridgeDownSound = document.getElementById(\"bridge-down\");\n    this.gameMusic = document.getElementById(\"game-song\");\n    this.menuMusic = document.getElementById(\"menu-song\");\n\n    this.toggleMusic = this.toggleMusic.bind(this);\n  }\n\n  start() {\n    this.musicButton = document.getElementById(\"music\");\n    this.musicButton.addEventListener(\"click\", this.toggleMusic);\n    this.playMusic = true;\n    this.gameMusic.loop = true;\n    this.gameMusic.play();\n  }\n\n  toggleMusic() {\n    this.playMusic === true ? this.pausMusic() : this.resumeMusic();\n  }\n\n  pausMusic() {\n    this.playMusic = false;\n    this.musicButton.className = \"off\";\n    this.gameMusic.pause();\n  }\n\n  resumeMusic() {\n    this.playMusic = true;\n    this.musicButton.className = \"on\";\n    this.gameMusic.play();\n  }\n\n  playBlockSound(block) {\n    block.height === block.width ?\n      this.squareSound.play() : this.rectangleSound.play();\n  }\n\n  playBridgeSound(tile) {\n    tile.active ?\n      this.bridgeUpSound.play() : this.bridgeDownSound.play();\n  }\n\n  playFallSound() {\n    this.fallSound.play();\n  }\n\n  playGoalSound() {\n    this.completeLevelSound.play();\n  }\n\n  playWarpSound() {\n    this.warpSound.play();\n  }\n}\n\nmodule.exports = Sound;\n","class Menu {\n  constructor(context) {\n    this.blockSize = \"medium\";\n    this.canvas = document.getElementById(\"blockhead\");\n    this.context = context;\n  }\n\n  activateMenu() {\n\n    this.canvas.addEventListenenr('click', this.startGame);\n    this.canvas.addEventListener('click', this.beginTutorial);\n    this.canvas.addEventListener('click', this.alterOptions);\n  }\n\n  startGame(e) {\n    e.preventDefault();\n  }\n\n  beginTutorial(e) {\n    e.preventDefault(e);\n\n  }\n\n  alterBlockSize() {\n    e.preventDefault(e);\n\n  }\n}\n\nmodule.exports = Menu;\n","class Tile {\n  constructor(options) {\n    this.xPos = options.x;\n    this.yPos = options.y;\n    this.type = this.typeReference(options.type);\n    this.active = this.checkActiveStatus(options.active);\n  }\n\n  typeReference(type) {\n    switch(type) {\n      case \"n\":\n        return \"none\";\n      case \"s\":\n        return \"start\";\n      case \"g\":\n        return \"goal\";\n      case \"c\":\n        return \"collapsible\";\n      case \"w\":\n        return \"warp\";\n      case \"a\":\n        return \"activator\";\n      case \"b\":\n        return \"bridge\";\n    }\n  }\n\n  checkActiveStatus(status) {\n    return status === undefined ? true : status;\n  }\n\n  toggleActive() {\n    if (this.type === \"bridge\") {\n      this.active = !this.active;\n    }\n  }\n}\n\nmodule.exports = Tile;\n","const Tile = require('./tile');\n\nclass LevelGenerator {\n  constructor(length, levels) {\n    this.currentLevel = 1;\n    this.length = length;\n    this.levelData = levels;\n\n    this.constructTileCoordinates = this.constructTileCoordinates.bind(this);\n  }\n\n  nextLevel() {\n    this.currentLevel += 1;\n  }\n\n  resetCurrentLevel() {\n    this.currentLevel = 1;\n  }\n\n  constructFloor() {\n    this.constructedFloor = this.generateLevel();\n    this.currentStartPosition = this.getStart(this.constructedFloor);\n  }\n\n  getStart(floor) {\n    for (var position in floor) {\n      let tile = floor[position];\n      if (tile.type === \"start\") {\n        return { xPos: tile.xPos, yPos: tile.yPos };\n      }\n    }\n  }\n\n  generateLevel() {\n    const level = this.levelData[this.currentLevel];\n    const startPosition = this.centerFloor(level.floorDimensions);\n    return this.setCoordinates(level.floorData, startPosition);\n  }\n\n  centerFloor(floorDimensions) { // Tiles are positioned relative to the\n    const canvasWidth = 900;     // position of the top-left tile on a floor.\n    const canvasHeight = 500;\n    const floorWidth = floorDimensions.xRange * this.length;\n    const floorHeight = floorDimensions.yRange * this.length;\n    const startCornerXPos = Math.floor((canvasWidth - floorWidth) / 2);\n    const startCornerYPos = Math.floor((canvasHeight - floorHeight) / 2);\n    return { xPos: startCornerXPos, yPos: startCornerYPos };\n  }\n\n  setCoordinates(floorData, startPosition) {\n    const newFloor = {};\n    floorData.forEach(tileData => {\n      let tileOptions = this.constructTileCoordinates(tileData, startPosition);\n      let tile = new Tile(tileOptions);\n      let tilePosition = `[${tile.xPos}, ${tile.yPos}]`;\n      newFloor[tilePosition] = tile;\n    });\n    return newFloor;\n  }\n\n  constructTileCoordinates(tileData, startPosition) {\n    const x = startPosition.xPos + this.length * tileData.x;\n    const y = startPosition.yPos + this.length * tileData.y;\n    return { x: x, y: y, type: tileData.type, active: tileData.active };\n  }\n\n  lookupTile(position) {\n    const currentPosition = `[${position.xPos}, ${position.yPos}]`;\n    return this.constructedFloor[currentPosition];\n  }\n}\n\nmodule.exports = LevelGenerator;\n","class GameClock {\n  constructor() {\n    this.gameTimeSeconds = 0;\n  }\n\n  upTick() {\n    this.gameTimeSeconds += 1;\n  }\n\n  currentTime() {\n    const gameTime = this.gameTimeSeconds;\n    const seconds = gameTime % 60;\n    const minutes = Math.floor(gameTime / 60) % 60;\n    return { minutes: minutes, seconds: seconds };\n  }\n}\n\nmodule.exports = GameClock;\n","const GameClock = require('./clock');\n\nclass Display {\n  constructor(ctx, length) {\n    this.clock = new GameClock();\n    this.ctx = ctx;\n    this.length = length;\n    this.colors = this.colors();\n    this.fonts = this.fonts();\n    this.ctx.fillStyle = this.colors.backgroundColor;\n    this.ctx.fillRect(0, 0, 900, 500);\n\n    this.drawTime = this.drawTime.bind(this);\n  }\n\n  colors() {\n    return {\n      backgroundColor: 'rgb(25, 25, 25)',\n      textColor: 'rgb(255, 255, 255)',\n      blockColor: 'rgb(200, 0, 255)',\n      blockFallingColor: 'rgb(255, 0, 0)',\n      tileColors: {\n        start: 'rgb(0, 255, 255)',\n        goal: 'rgb(0, 255, 0)',\n        none: 'rgb(192, 192, 192)',\n        collapsible: 'rgb(255, 128, 0)',\n        warp: 'rgb(255, 255, 0)',\n        activator: 'rgb(255, 255, 255)',\n        bridge: 'rgb(128, 0, 0)',\n      }\n    };\n  }\n\n  fonts() {\n    return {\n      mediumFontSize: '30px sans-serif',\n      largeFontSize: '50px sans-serif',\n    };\n  }\n\n  render(options) {\n    this.ctx.fillStyle = this.colors.backgroundColor;\n    this.ctx.fillRect(0, 0, 900, 450);\n    this.ctx.fillRect(0, 450, 700, 50);\n    this.ctx.font = this.fonts.mediumFontSize;\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText(`Level ${options.levelNumber}`, 25, 50);\n    this.ctx.fillText(`Moves: ${options.moves}`, 700, 50);\n    this.ctx.fillText(`Falls: ${options.falls}`, 25, 475);\n    this.drawFloor(options.level);\n  }\n\n  drawFloor(floor) {\n    for (var position in floor) {\n      let tile = floor[position];\n      this.ctx.fillStyle = this.colors.tileColors[tile.type];\n      const { xPos, yPos } = tile;\n      this.ctx.fillRect(xPos, yPos, this.length, this.length);\n      this.ctx.strokeRect(xPos, yPos, this.length, this.length);\n    }\n  }\n\n  drawMenu() { // Not yet in use\n    this.ctx.font = this.fonts.largeFontSize;\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText('Blockhead', 400, 200);\n    this.ctx.font = this.fonts.mediumFontSize;\n    this.ctx.fillStyle = 'red';\n    this.ctx.fillText('Options (coming soon!)', 350, 300);\n    this.ctx.fillText('Tutorial (coming soon!)', 350, 350);\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText('Start', 300, 250);\n  }\n\n  stringifyTime() {\n    const { minutes, seconds } = this.clock.currentTime();\n\n    const minuteString = (minutes < 10) ? `0${minutes}` : minutes;\n    const secondString = (seconds < 10) ? `0${seconds}` : seconds;\n\n    return `${minuteString}:${secondString}`;\n  }\n\n  drawTime() {\n    const displayTime = this.stringifyTime();\n    this.ctx.fillStyle = this.colors.backgroundColor;\n    this.ctx.fillRect(200, 450, 900, 50);\n    this.ctx.font = this.fonts.mediumFontSize;\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText(displayTime, 700, 475);\n    this.clock.upTick();\n  }\n\n  drawBlock(block) {\n    const { xPos, yPos, width, height } = block;\n    this.ctx.fillStyle = this.colors.blockColor;\n    this.ctx.fillRect(xPos, yPos, width, height);\n    this.ctx.strokeRect(xPos, yPos, width, height);\n  }\n\n  stringifyRGBData(colorData) {\n    return 'rgb('.concat(colorData[0])\n      .concat(', ')\n      .concat(colorData[1])\n      .concat(', ')\n      .concat(colorData[2])\n      .concat(')');\n  }\n\n  tileMovesOffFloor(coordinates) {\n    for(let i = 0; i < coordinates.length; i++) {\n      let corner = coordinates[i];\n      let point = this.ctx.getImageData(corner[0], corner[1], 1, 1);\n      let colorData = point.data.slice(0, 3);\n      let color = this.stringifyRGBData(colorData);\n      if (color === this.colors.backgroundColor) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawPause() {\n    this.ctx.fillStyle = this.colors.backgroundColor;\n    this.ctx.fillRect(0, 0, 900, 500);\n    this.ctx.font = this.fonts.largeFontSize;\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText(`Pause`, 400, 200);\n    this.ctx.font = this.fonts.mediumFontSize;\n    this.ctx.fillText(`(Press enter to resume)`, 300, 300);\n  }\n\n  drawFail(oldOptions) {\n    const { xPos, yPos, width, height } = oldOptions;\n    this.ctx.fillStyle = this.colors.blockFallingColor;\n    this.ctx.fillRect(xPos, yPos, width, height);\n  }\n\n  drawFinish(options) {\n    this.ctx.fillStyle = this.colors.backgroundColor;\n    this.ctx.fillRect(0, 0, 900, 500);\n    this.ctx.font = this.fonts.largeFontSize;\n    this.ctx.fillStyle = this.colors.textColor;\n    this.ctx.fillText(`Final Tally:`, 50, 100);\n    this.ctx.font = this.fonts.mediumFontSize;\n    this.ctx.fillText(`Moves: ${options.moves}`, 70, 155);\n    this.ctx.fillText(`Falls: ${options.falls}`, 70, 190);\n    this.ctx.fillText(`Time: ${options.time}`, 70, 225);\n    this.ctx.fillText(\"Press spacebar to start over\", 50, 400);\n  }\n}\n\nmodule.exports = Display;\n","class Controls {\n  constructor() {\n    this.pauseStatus = false;\n  }\n\n  restartGame(e, game) {\n    if (e.keyCode === 32) {\n        e.preventDefault();\n        game.levels.resetCurrentLevel();\n        game.start();\n        document.removeEventListener(\"keydown\", game.restart);\n    }\n  }\n\n  getMove(e, block) {\n    e.preventDefault();\n    switch (e.keyCode) {\n      case 40: // down arrow key\n        block.transformBlock(0, 1);\n        break;\n      case 38: // up arrow key\n        block.transformBlock(0, -1);\n        break;\n      case 37: // left arrow key\n        block.transformBlock(-1, 0);\n        break;\n      case 39: // right arrow key\n        block.transformBlock(1, 0);\n    }\n  }\n\n  pauseButton(e, game) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.pauseStatus = !this.pauseStatus;\n      this.pauseStatus === true ? this.pauseGame(game) : this.resumeGame(game);\n    }\n  }\n\n  pauseGame(game) {\n    clearInterval(game.timerId);\n    document.removeEventListener(\"keydown\", game.move);\n    game.display.drawPause();\n  }\n\n  resumeGame(game) {\n    game.display.render(game.displayOptions());\n    game.display.drawBlock(game.block);\n    document.addEventListener(\"keydown\", game.move);\n    game.timerId = setInterval(game.display.drawTime, 1000);\n  }\n}\n\nmodule.exports = Controls;\n","class Block {\n  constructor(length, dimensions) {\n    this.length = length;\n    this.width = dimensions.width;\n    this.height = dimensions.height;\n  }\n\n  dimensions() {\n    return {\n      width: this.width,\n      height: this.height,\n    };\n  }\n\n  position() {\n    return {\n      xPos: this.xPos,\n      yPos: this.yPos\n    };\n  }\n\n  properties() {\n    return {\n      xPos: this.xPos,\n      yPos: this.yPos,\n      width: this.width,\n      height: this.height\n    };\n  }\n\n  setPosition(coordinates) {\n    this.xPos = coordinates.xPos;\n    this.yPos = coordinates.yPos;\n  }\n\n  resetBlock(startPosition) {\n    this.width = this.length;\n    this.height = this.length;\n    this.xPos = startPosition.xPos;\n    this.yPos = startPosition.yPos;\n  }\n\n// To reduce information which must be tracked by the game state,\n// Length is kept as a block attribute. This is because length is a\n// constant dictating the size of each tile, and the block always\n// moves a discrete distance (1 or 2 tiles). dx and dy therefore\n// represent discrete tile steps and are multiplied by length to account\n// for varying tile sizes set by the player.\n  changePosition(dx, dy) {\n    this.xPos += dx * this.length;\n    this.yPos += dy * this.length;\n  }\n\n  transformBlock(x, y) {\n    this.width === this.height ?\n      this.expand(x, y) : this.checkDimensionsAndMovement(x, y);\n  }\n\n  expand(x, y) {\n    x !== 0 ? this.expandWidth(x, y) : this.expandHeight(x, y);\n  }\n\n  // To simulate a rectangular prism, the block's dimensions and\n  // position must change differently depending on its current size and\n  // the direction it moves.\n  checkDimensionsAndMovement(x, y) {\n    if (this.width > this.height && x !== 0) {\n      this.contractWidth(x, y);\n    } else if (this.width < this.height && y !== 0) {\n      this.contractHeight(x, y);\n    } else {\n      this.changePosition(x, y);\n    }\n  }\n\n  expandWidth(x, y) {\n    this.width *= 2;\n    x > 0 ? this.changePosition(x, y) : this.changePosition(2 * x, y);\n  }\n\n  expandHeight(x, y) {\n    this.height *= 2;\n    y > 0 ? this.changePosition(x, y) : this.changePosition(x, 2 * y);\n  }\n\n  contractWidth(x, y) {\n    this.width /= 2;\n    x > 0 ? this.changePosition(2 * x, y) : this.changePosition(x, y);\n  }\n\n  contractHeight(x, y) {\n    this.height /= 2;\n    y > 0 ? this.changePosition(x, y * 2) : this.changePosition(x, y);\n  }\n}\n\nmodule.exports = Block;\n","const Block = require('./game_objects/block');\nconst Controls = require('./game_objects/controls');\nconst Display = require('./game_objects/display');\nconst LevelGenerator = require('./game_objects/level_generator');\nconst Menu = require('./game_objects/menu');\nconst Sound = require('./game_objects/sound');\n\nconst allLevels = require('./levels/all_levels');\n\nclass Game {\n  constructor(ctx, length) {\n    this.display = new Display(ctx, length);\n    this.levels = new LevelGenerator(length, allLevels);\n    this.block = new Block(length, { width: length, height: length });\n    this.sound = new Sound();\n    this.controls = new Controls();\n\n    this.move = this.move.bind(this);\n    this.pause = this.pause.bind(this);\n    this.restart = this.restart.bind(this);\n  }\n\n  start() {\n    this.moves = 0;\n    this.falls = 0;\n    this.sound.start();\n    this.levels.constructFloor();\n    this.block.setPosition(this.levels.currentStartPosition);\n    this.timerId = setInterval(this.display.drawTime, 1000);\n    document.addEventListener(\"keydown\", this.move);\n    document.addEventListener(\"keydown\", this.pause);\n    this.display.render(this.displayOptions());\n    this.display.drawBlock(this.block);\n  }\n\n  restart(e) {\n    this.controls.restartGame(e, this);\n  }\n\n  move(e) {\n    const arrowKeycodes = [37, 38, 39, 40];\n    if (arrowKeycodes.includes(e.keyCode)) {\n      this.controls.getMove(e, this.block);\n      this.moves += 1;\n      this.checkBlock();\n    }\n  }\n\n  pause(e) {\n    this.controls.pauseButton(e, this);\n  }\n\n  displayOptions() {\n    return {\n      level: this.levels.constructedFloor,\n      levelNumber: this.levels.currentLevel,\n      moves: this.moves,\n      falls: this.falls,\n    };\n  }\n\n  checkBlock() {\n    if (this.block.width === this.block.height) {\n      this.checkGoal();\n    }\n    const { levelData, currentLevel } = this.levels;\n    if (levelData[currentLevel] !== undefined) {\n      this.checkBounds();\n    }\n  }\n\n  checkGoal() {\n    const tile = this.levels.lookupTile(this.block.position());\n    if (tile !== undefined && tile.type === \"goal\") {\n      this.nextLevel();\n    }\n  }\n\n  nextLevel() {\n    this.sound.playGoalSound();\n    this.levels.nextLevel();\n    const { levelData, currentLevel } = this.levels;\n    if (levelData[currentLevel] === undefined) {\n      this.endGame();\n    } else {\n      this.levels.constructFloor();\n      this.block.setPosition(this.levels.currentStartPosition);\n      this.display.render(this.displayOptions());\n      this.display.drawBlock(this.block);\n    }\n  }\n\n  endGame() {\n    document.removeEventListener(\"keydown\", this.move);\n    document.removeEventListener(\"keydown\", this.pause);\n    clearInterval(this.timerId);\n    this.display.drawFinish(this.displayOptions());\n    document.addEventListener(\"keydown\", this.restart);\n  }\n\n  checkBounds() {\n    const { currentLevel, levelData } = this.levels;\n    const coordinates = this.getCoordinates();\n    if (this.display.tileMovesOffFloor(coordinates)) {\n      this.resetLevel();\n    } else if (levelData[currentLevel] !== undefined) {\n      this.display.render(this.displayOptions());\n      this.display.drawBlock(this.block);\n      this.sound.playBlockSound(this.block);\n    }\n  }\n\n  getCoordinates() {\n    const { xPos, yPos } = this.block.position();\n    const { width, height } = this.block.dimensions();\n    return [\n      [xPos + Math.floor(width / 4), yPos + Math.floor(height / 4)],\n      [xPos + Math.floor(width * 3 / 4), yPos + Math.floor(height * 3 / 4)],\n    ];\n  }\n\n  resetLevel() {\n    document.removeEventListener(\"keydown\", this.move);\n    this.falls += 1;\n    this.flashFailure();\n  }\n\n  flashFailure() {\n    this.display.render(this.displayOptions());\n    this.display.drawFail(this.block.properties());\n    this.sound.playFallSound();\n    this.block.resetBlock(this.levels.currentStartPosition);\n    setTimeout(() => {\n      this.display.render(this.displayOptions());\n      this.display.drawBlock(this.block);\n      document.addEventListener(\"keydown\", this.move);\n    }, 800);\n  }\n}\n\nmodule.exports = Game;\n","const Game = require('./game');\nconst PageButtons = require('./page_buttons');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const buttonActivation = new PageButtons();\n  const blockheadBoard = document.getElementById(\"blockhead\");\n  const ctx = blockheadBoard.getContext(\"2d\");\n  blockheadBoard.width = 900;\n  blockheadBoard.height = 500;\n  new Game(ctx, 30).start();\n});\n"],"sourceRoot":""}